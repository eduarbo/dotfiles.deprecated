#!/usr/bin/env bash

DOT="$HOME/.dotfiles"
DOT_TARBALL_PATH="https://github.com/eduarbo/dotfiles/tarball/master"
DOT_GIT_REMOTE="git@github.com:eduarbo/dotfiles.git"

install_homebrew () {
  # Check for Homebrew
  if ! type_exists 'brew'; then
    e_header "Installing Homebrew..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    brew analytics off

    e_header "Updating Homebrew..."
    brew update
    brew doctor
  fi

  brew tap 'homebrew/bundle'
  brew tap 'caskroom/cask'
  brew tap 'homebrew/core'
  brew tap 'homebrew/dupes'
}

install_pkg () {
  if ! type_exists "$1"; then
    e_header "Installing $1..."
    trytoinstall "$1"
  fi
}

setup_dotfiles() {
  # If missing, download and extract the dotfiles repository
  if [[ ! -d $DOT ]]; then
    printf "$(tput setaf 7)Downloading dotfiles...\033[m\n"
    mkdir "${DOT}"
    # Get the tarball
    curl -fsSLo "${HOME}/dotfiles.tar.gz" "${DOT_TARBALL_PATH}"
    # Extract to the dotfiles directory
    tar -zxf "${HOME}/dotfiles.tar.gz" --strip-components 1 -C "${DOT}"
    # Remove the tarball
    rm -rf "${HOME}/dotfiles.tar.gz"
  fi
}

setup_dotfiles_repo() {
  # Check if current directory is a repo
  if ! $(git rev-parse --is-inside-work-tree &> /dev/null); then
    e_header "Initializing git repository..."
    git init
    git remote add origin $DOT_GIT_REMOTE
    git fetch origin master
    # Reset the index and working tree to the fetched HEAD
    # (submodules are cloned in the subsequent sync step)
    git reset --hard FETCH_HEAD
    # Remove any untracked files
    git clean -fd
  fi

  # Check if master branch is sync'd
  if [ x"$(git rev-parse master)" != x"$(git rev-parse origin/master)" ]; then
    # sync with the remote repository
    e_header "Syncing dotfiles..."
    # Pull down the latest changes
    git pull --rebase origin master
  fi
}

setup_dotfiles
source "$DOT/bash/lib/utils"
[[ $IS_MACOS ]] && install_homebrew
install_pkg git
install_pkg stow
ln -sf $DOT/.stow-global-ignore $HOME
setup_dotfiles_repo
