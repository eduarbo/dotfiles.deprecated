<?xml version="1.0"?>
<root>
  <devicevendordef>
    <vendorname>ARDUINO_LLC</vendorname>
    <vendorid>0x2341</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>DIVERGE3</productname>
    <productid>0x8036</productid>
  </deviceproductdef>

  <modifierdef>OPTION_L_TO_CONTROL_L</modifierdef>
  <modifierdef>OPTION_R_TO_OPTION_R</modifierdef>
  <modifierdef>SYMBOLS</modifierdef>

<!-- ──────────────────────────────────────────────────────────── -->

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Calendar</name>
    <url type="file">/Applications/Calendar.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Chrome</name>
    <url type="file">/Applications/Google Chrome.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Dashlane</name>
    <url type="file">/Applications/Dashlane.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Emacs</name>
    <url type="file">/usr/local/Cellar/emacs/25.1/Emacs.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Hipchat</name>
    <url type="file">/Applications/HipChat.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_iTerm</name>
    <url type="file">/Applications/iTerm.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Slack</name>
    <url type="file">/Applications/Slack.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Karabiner</name>
    <url type="file">/Applications/Karabiner.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Spotify</name>
    <url type="file">/Applications/Spotify.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_VLC</name>
    <url type="file">/Applications/VLC.app</url>
  </vkopenurldef>

  <replacementdef>
    <replacementname>LAUNCHER_MODE_V2_EXTRA</replacementname>
    <replacementvalue>
      <![CDATA[
        <autogen>
          __KeyDownUpToKey__
          KeyCode::A,
          KeyCode::VK_OPEN_URL_APP_Calendar,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::C,
          KeyCode::VK_OPEN_URL_APP_Chrome,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::D,
          KeyCode::VK_OPEN_URL_APP_Dashlane,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::E,
          KeyCode::VK_OPEN_URL_APP_Emacs,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::H,
          KeyCode::VK_OPEN_URL_APP_Hipchat,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::I,
          KeyCode::VK_OPEN_URL_APP_iTerm,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::S,
          KeyCode::VK_OPEN_URL_APP_Slack,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::K,
          KeyCode::VK_OPEN_URL_APP_Karabiner,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::P,
          KeyCode::VK_OPEN_URL_APP_Spotify,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::V,
          KeyCode::VK_OPEN_URL_APP_VLC,
        </autogen>
      ]]>
    </replacementvalue>
  </replacementdef>

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <name style="important">
      Check http://www.keyboard-layout-editor.com/#/gists/2ce85a1ef8498e89efb0736a86e936f0 to see all the mappings
    </name>
  </item>

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <!--  ======== -->
    <name>Fn layer</name>
    <!--  ======== -->

    <appendix>* Overlay Arrow and Function Keys on the right side of the keyboard</appendix>
    <appendix>* Overlay movement and media keys on the left side of the keyboard</appendix>
    <identifier>private.fn_layer</identifier>

    <modifier_only>
      ModifierFlag::FN,
    </modifier_only>

    <!-- Volume controls -->
    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_LEFT,
      ConsumerKeyCode::VOLUME_DOWN,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SHIFT_L,
      ConsumerKeyCode::VOLUME_DOWN,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_RIGHT,
      ConsumerKeyCode::VOLUME_UP,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SHIFT_R,
      ConsumerKeyCode::VOLUME_UP,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::DELETE,
      ConsumerKeyCode::VOLUME_MUTE,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::F19,
      ConsumerKeyCode::VOLUME_MUTE,
    </autogen>

    <!-- Brightness controls -->
    <autogen>
      __KeyToKey__
      KeyCode::W,
      ConsumerKeyCode::BRIGHTNESS_DOWN,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::R,
      ConsumerKeyCode::BRIGHTNESS_UP,
    </autogen>

    <!-- Movement -->
    <autogen>
      __KeyToKey__
      KeyCode::A,
      ModifierFlag::FN,
      KeyCode::HOME,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::G,
      ModifierFlag::FN,
      KeyCode::END,
    </autogen>

    <autogen>
      __KeyToKey__
      KeyCode::E,
      ModifierFlag::FN,
      KeyCode::CURSOR_UP,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::S,
      ModifierFlag::FN,
      KeyCode::CURSOR_LEFT,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::D,
      ModifierFlag::FN,
      KeyCode::CURSOR_DOWN,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::F,
      ModifierFlag::FN,
      KeyCode::CURSOR_RIGHT,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::H,
      ModifierFlag::FN,
      KeyCode::CURSOR_LEFT,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::J,
      ModifierFlag::FN,
      KeyCode::CURSOR_DOWN,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::K,
      ModifierFlag::FN,
      KeyCode::CURSOR_UP,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::L,
      ModifierFlag::FN,
      KeyCode::CURSOR_RIGHT,
    </autogen>

    <!-- music -->
    <autogen>
      __KeyToKey__
      KeyCode::X,
      ConsumerKeyCode::MUSIC_PREV,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::C,
      ConsumerKeyCode::MUSIC_PLAY,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::V,
      ConsumerKeyCode::MUSIC_NEXT,
    </autogen>

    <!-- function keys -->
    <autogen>
      __KeyToKey__
      KeyCode::Y,
      KeyCode::F1,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::U,
      KeyCode::F2,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::F3,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::F4,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::P,
      KeyCode::F5,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::F6,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::F7,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::COMMA,
      KeyCode::F8,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::DOT,
      KeyCode::F9,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SLASH,
      KeyCode::F10,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::F11,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::QUOTE,
      KeyCode::F12,
    </autogen>
  </item> <!-- End Fn layer -->

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <!--  ============= -->
    <name>Symbols layer</name>
    <!--  ============= -->

    <appendix>* Overlay Numbers Row above the Home Row</appendix>
    <appendix>* Overlay Symbols onto the Home Row</appendix>
    <appendix>* Overlay Extra Symbols below the Home Row</appendix>
    <identifier>private.symbols_layer</identifier>

    <modifier_only>
      ModifierFlag::SYMBOLS,
    </modifier_only>

    <!-- Overlay Numbers above the Home Row -->
    <autogen>
      __KeyToKey__
      KeyCode::Q,
      KeyCode::KEY_1,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::W,
      KeyCode::KEY_2,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::E,
      KeyCode::KEY_3,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::R,
      KeyCode::KEY_4,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::T,
      KeyCode::KEY_5,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::Y,
      KeyCode::KEY_6,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::U,
      KeyCode::KEY_7,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::I,
      KeyCode::KEY_8,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::O,
      KeyCode::KEY_9,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::P,
      KeyCode::KEY_0,
    </autogen>

    <!-- Overlay Symbols onto the Home Row -->
    <autogen>
      __KeyToKey__
      KeyCode::A,
      KeyCode::KEY_1, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::S,
      KeyCode::KEY_2, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::D,
      KeyCode::KEY_3, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::F,
      KeyCode::KEY_4, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::G,
      KeyCode::KEY_5, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::H,
      KeyCode::KEY_6, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::J,
      KeyCode::KEY_7, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::K,
      KeyCode::KEY_8, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::L,
      KeyCode::BACKSLASH,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      KeyCode::BACKSLASH, ModifierFlag::SHIFT_L,
    </autogen>

    <!-- Overlay Extra Symbols below the Home Row -->
    <autogen>
      __KeyToKey__
      KeyCode::Z,
      KeyCode::KEY_1, ModifierFlag::OPTION_R,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::X,
      KeyCode::EQUAL,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::C,
      KeyCode::MINUS,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::V,
      KeyCode::EQUAL, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::B,
      KeyCode::MINUS, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::N,
      KeyCode::N, ModifierFlag::OPTION_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::M,
      KeyCode::E, ModifierFlag::OPTION_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SLASH,
      KeyCode::SLASH, ModifierFlag::SHIFT_L | ModifierFlag::OPTION_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SHIFT_L,
      KeyCode::KEY_9, ModifierFlag::SHIFT_L,
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SHIFT_R,
      KeyCode::KEY_0, ModifierFlag::SHIFT_L,
    </autogen>
  </item> <!-- End Symbols layer -->

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <!--  ========== -->
    <name>Main layer</name>
    <!--  ========== -->

    <item>
      <name>Caps Lock to Delete</name>
      <!--  =================== -->

      <appendix>OS X doesn't have a Delete. This maps Caps lock (F19) to Delete.</appendix>
      <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>
      <identifier>private.f19_to_delete</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::DELETE,
      </autogen>
    </item>

    <item>
      <name>Left Bracket to Backquote</name>
      <!--  ========================= -->

      <identifier>private.left_bracket_to_backquote</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT,
        KeyCode::BACKQUOTE,
      </autogen>
    </item>

    <item>
      <name>Right Bracket to Backslash</name>
      <!--  ========================== -->

      <identifier>private.right_bracket_to_backslash</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_RIGHT,
        KeyCode::BACKSLASH,
      </autogen>
    </item>

    <item>
      <name>Shifts to Parentheses and brackets</name>
      <!--  ================================== -->

      <identifier>private.shifts_to_parentheses_and_brackets</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_R,
        KeyCode::BRACKET_RIGHT,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_L,
        KeyCode::BRACKET_LEFT,
      </autogen>
    </item>
  </item> <!-- End Main layer -->

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <!--  ================== -->
    <name>Diverge 3 mappings</name>
    <!--  ================== -->

    <item>
      <name>Command to Command for Diverge 3</name>
      <!--  ================================ -->

      <appendix>* Send a Escape key event when any Command key is pressed alone.</appendix>
      <identifier>remap.command_to_command</identifier>
      <device_only>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_only>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_L,
        KeyCode::VK_LAZY_COMMAND_L,
        KeyCode::ESCAPE,
        KeyCode::VK_LOCK_ALL_FORCE_OFF,
      </autogen>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_R,
        KeyCode::VK_LAZY_COMMAND_R,
        KeyCode::ESCAPE,
        KeyCode::VK_LOCK_ALL_FORCE_OFF,
      </autogen>
    </item>

    <item>
      <name>Sticky Shift</name>
      <!--  ============ -->

      <identifier>private.sticky_shift</identifier>
      <device_only>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_only>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::SHIFT_R,
        KeyCode::SHIFT_R,
        KeyCode::VK_STICKY_ACTIVE_MODIFIERS_FORCE_ON,
        KeyCode::VK_STICKY_SHIFT_R,
      </autogen>
    </item>

    <item>
      <name>Mouse Keys Mode v2</name>
      <!--  ================== -->

      <appendix>You can move mouse pointer by d+hjkl keys, and scroll by d+s+hjkl keys.</appendix>
      <appendix></appendix>
      <appendix>Usage:</appendix>
      <appendix></appendix>
      <appendix>Move pointer by:</appendix>
      <appendix><![CDATA[  * Left: D down -> H down -> H up  ]]></appendix>
      <appendix><![CDATA[  * Down: D down -> J down -> J up  ]]></appendix>
      <appendix><![CDATA[  * Up: D down -> K down -> K up  ]]></appendix>
      <appendix><![CDATA[  * Right: D down -> L down -> L up  ]]></appendix>
      <appendix></appendix>
      <appendix>The hjkl keys also act as mouse keys when you hold d+hjkl keys down.</appendix>
      <appendix>(You can adjust timeout by "__BlockUntilKeyUp__ Timeout" in Parameters tab.</appendix>
      <appendix></appendix>
      <appendix>Use S key to enable scroll. ("S"croll)</appendix>
      <appendix>* D+S+HJKL: Scroll wheel.</appendix>
      <appendix></appendix>
      <appendix>Use F key to increase speed. ("F"ast)</appendix>
      <appendix>* D+F+HJKL: High-speed movement.</appendix>
      <appendix>* D+F+S+HJKL: High-speed scroll wheel.</appendix>
      <appendix></appendix>
      <appendix>Click by:</appendix>
      <appendix>* D+V: Left click.</appendix>
      <appendix>* D+B: Middle click.</appendix>
      <appendix>* D+N: Right click.</appendix>
      <appendix></appendix>
      <appendix>Warp cursor position:</appendix>
      <appendix>* D+I: Move mouse cursor to the center of the frontmost app's window.</appendix>
      <identifier>private.mouse_keys_mode_2</identifier>
      <device_only>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_only>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::D,

        <!--
            Use notsave.mouse_keys_mode_2 in order to be higher priority.
            Use ModifierFlag::MOUSE_KEYS_MODE_2 for __DropAllKeys__.
        -->
        @begin
        KeyCode::VK_CONFIG_FORCE_ON_notsave_mouse_keys_mode_2,
        KeyCode::VK_MODIFIER_MOUSE_KEYS_MODE_2,
        @end

        @begin
        KeyCode::D,
        @end
      </autogen>
    </item>

    <item>
      <name>Sticky SYMBOLS</name>
      <!--  ============== -->

      <identifier>private.diverge3_sticky_symbols</identifier>
      <device_only>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_only>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L,
        KeyCode::VK_MODIFIER_SYMBOLS,
        KeyCode::VK_STICKY_ACTIVE_MODIFIERS_FORCE_ON,
        KeyCode::VK_STICKY_SYMBOLS,
      </autogen>
    </item>

  </item> <!-- End Diverge 3 mappings -->

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <!--  =============== -->
    <name>Thumb modifiers</name>
    <!--  =============== -->

    <item>
      <name>Control_L to Fn</name>
      <!--  ======================= -->

      <identifier>private.control_l_to_fn</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::CONTROL_L,
        KeyCode::FN,
      </autogen>
    </item>

    <item>
      <name>Option_L to Control_L</name>
      <!--  ===================== -->

      <appendix>(+ When you type Option_L only, send Space</appendix>
      <identifier>private.option_l_to_control_l_send_space</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L,
        KeyCode::VK_LAZY_CONTROL_L,
        KeyCode::SPACE,
      </autogen>
    </item>

    <item>
      <name>Option_L to Control_L (another version)</name>
      <!--  ====================================================== -->

      <appendix>This version keeps the space key behavior while fast typing.</appendix>
      <appendix></appendix>
      <appendix>* Send Space key event when Option_L is released before another key is released.</appendix>
      <appendix>For example:</appendix>
      <appendix><![CDATA[  Option_L down -> T down -> T up => Control+T  ]]></appendix>
      <appendix><![CDATA[  Option_L down -> T down -> Control_L up => Space,T  ]]></appendix>
      <identifier>private.fast_space_to_control_l_send_space</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L,

        KeyCode::VK_LAZY_CONTROL_L, ModifierFlag::OPTION_L_TO_CONTROL_L,
        KeyCode::SPACE,
      </autogen>

      <block>
        <modifier_only>ModifierFlag::OPTION_L_TO_CONTROL_L</modifier_only>

        <autogen>
          __BlockUntilKeyUp__
          KeyCode::SPACE,
        </autogen>
      </block>
    </item>

    <item>
      <name>Option_R to Option_R</name>
      <!--  ===================== -->

      <appendix>(+ When you type Option_R only, send Return</appendix>
      <identifier>private.option_r_to_option_r</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_R,
        KeyCode::VK_LAZY_OPTION_R,
        KeyCode::RETURN,
      </autogen>
    </item>

    <item>
      <name>Option_R to Option_R (another version)</name>
      <!--  ====================================================== -->

      <appendix>This version keeps the Return behavior while fast typing.</appendix>
      <appendix></appendix>
      <appendix>* Send a Return key event when the Option_R is released before another key is released.</appendix>
      <appendix>For example:</appendix>
      <appendix><![CDATA[  Option_R down -> T down -> T up => Option+T  ]]></appendix>
      <appendix><![CDATA[  Option_R down -> T down -> Option_R up => Return,T  ]]></appendix>
      <identifier>private.fast_option_r_to_option_r</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_R,

        KeyCode::VK_LAZY_OPTION_R, ModifierFlag::OPTION_R_TO_OPTION_R,
        KeyCode::RETURN,
      </autogen>

      <block>
        <modifier_only>ModifierFlag::OPTION_R_TO_OPTION_R</modifier_only>

        <autogen>
          __BlockUntilKeyUp__
          KeyCode::OPTION_R,
        </autogen>
      </block>
    </item>

    <item>
      <name>Command_L to SYMBOLS key</name>
      <!--  ===================================== -->

      <identifier>private.command_l_to_symbols</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_L,
        KeyCode::VK_MODIFIER_SYMBOLS,
        KeyCode::VK_STICKY_ACTIVE_MODIFIERS_FORCE_ON,
        KeyCode::VK_STICKY_SYMBOLS,
      </autogen>
    </item>

    <item>
      <name>Command_R to Shift_R</name>
      <!--  ===================================== -->

      <identifier>private.command_r_to_shift_r</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_R,
        KeyCode::SHIFT_R,
        KeyCode::VK_STICKY_ACTIVE_MODIFIERS_FORCE_ON,
        KeyCode::VK_STICKY_SHIFT_R,
      </autogen>
    </item>

    <item>
      <name>Space to Command_L</name>
      <!--  ================== -->

      <identifier>remap.space_2_command_l</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::COMMAND_L,
      </autogen>
    </item>

    <item>
      <name>Space to Command_L</name>
      <!--  ================== -->

      <appendix>* Send a Escape key event when the Space bar is pressed alone.</appendix>
      <identifier>remap.space_to_command_l</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::SPACE,
        KeyCode::VK_LAZY_COMMAND_L,
        KeyCode::ESCAPE,
        KeyCode::VK_LOCK_ALL_FORCE_OFF,
      </autogen>
    </item>

    <item>
      <name>Space to Command_L (another version)</name>
      <!--  ====================================================== -->

      <appendix>This version keeps the space key behavior while fast typing.</appendix>
      <appendix></appendix>
      <appendix>* Send Escape key event when the Spacebar is released before another key is released.</appendix>
      <appendix>For example:</appendix>
      <appendix><![CDATA[  Spacebar down -> T down -> T up => Command+T  ]]></appendix>
      <appendix><![CDATA[  Spacebar down -> T down -> Spacebar up => Escape,T  ]]></appendix>
      <identifier>private.fast_space_to_command_l</identifier>

      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::SPACE,

        KeyCode::VK_LAZY_COMMAND_L, ModifierFlag::SPACE_TO_COMMAND,
        KeyCode::ESCAPE,
        KeyCode::VK_LOCK_ALL_FORCE_OFF,
      </autogen>

      <block>
        <modifier_only>ModifierFlag::SPACE_TO_COMMAND</modifier_only>

        <autogen>
          __BlockUntilKeyUp__
          KeyCode::SPACE,
        </autogen>
      </block>
    </item>
  </item> <!-- End Thumb modifiers -->

<!-- ──────────────────────────────────────────────────────────── -->

  <item>
    <name>──────────────────────────────</name>
  </item>
</root>
