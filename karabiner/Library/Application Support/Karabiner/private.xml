<?xml version="1.0"?>
<root>
  <devicevendordef>
    <vendorname>ARDUINO_LLC</vendorname>
    <vendorid>0x2341</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>DIVERGE3</productname>
    <productid>0x8036</productid>
  </deviceproductdef>

  <replacementdef>
    <replacementname>UPPER_KEY</replacementname>
    <replacementvalue>
      ModifierFlag::OPTION_L | ModifierFlag::CONTROL_R | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <replacementdef>
    <replacementname>HYPER_KEY</replacementname>
    <replacementvalue>
      KeyCode::COMMAND_L, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <replacementdef>
    <replacementname>HYPER_MOD</replacementname>
    <replacementvalue>
      ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <modifierdef>COMMAND_L_TO_SYMBOLS</modifierdef>
  <modifierdef>COMMAND_R_TO_SHIFT_R</modifierdef>
  <modifierdef>SPACE_TO_COMMAND_L</modifierdef>
  <modifierdef>SYMBOLS</modifierdef>
  <modifierdef>PARENTHESES</modifierdef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Calendar</name>
    <url type="file">/Applications/Calendar.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Chrome</name>
    <url type="file">/Applications/Google Chrome.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Dashlane</name>
    <url type="file">/Applications/Dashlane.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Emacs</name>
    <url type="file">/usr/local/Cellar/emacs/25.1/Emacs.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_FFD</name>
    <url type="file">/Applications/FirefoxDeveloperEdition.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Hipchat</name>
    <url type="file">/Applications/HipChat.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_iTerm</name>
    <url type="file">/Applications/iTerm.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Skype</name>
    <url type="file">/Applications/Skype.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Slack</name>
    <url type="file">/Applications/Slack.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Spotify</name>
    <url type="file">/Applications/Spotify.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_VLC</name>
    <url type="file">/Applications/VLC.app</url>
  </vkopenurldef>

  <replacementdef>
    <replacementname>LAUNCHER_MODE_V2_EXTRA</replacementname>
    <replacementvalue>
      <![CDATA[
        <autogen>
          __KeyDownUpToKey__
          KeyCode::A,
          KeyCode::VK_OPEN_URL_APP_Calendar,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::C,
          KeyCode::VK_OPEN_URL_APP_Chrome,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::D,
          KeyCode::VK_OPEN_URL_APP_Dashlane,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::E,
          KeyCode::VK_OPEN_URL_APP_Emacs,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::B,
          KeyCode::VK_OPEN_URL_APP_FFD,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::H,
          KeyCode::VK_OPEN_URL_APP_Hipchat,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::I,
          KeyCode::VK_OPEN_URL_APP_iTerm,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::S,
          KeyCode::VK_OPEN_URL_APP_Skype,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::K,
          KeyCode::VK_OPEN_URL_APP_Slack,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::P,
          KeyCode::VK_OPEN_URL_APP_Spotify,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::V,
          KeyCode::VK_OPEN_URL_APP_VLC,
        </autogen>
      ]]>
    </replacementvalue>
  </replacementdef>

  <item>
    <name>My settings</name>

    <item>
      <name>Caps Lock to Delete</name>
      <appendix>OS X doesn't have a Delete. This maps Caps lock (F19) to Delete.</appendix>
      <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>
      <identifier>private.f19_to_delete</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::DELETE
      </autogen>
    </item>

    <!-- Option_L to Control_L. When you type Option_L only send Return -->
    <item>
      <name>Option_L to Control_L</name>
      <appendix>(+ When you type Option_L only, send Return</appendix>
      <identifier>private.option_l_to_control_l</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L,
        KeyCode::CONTROL_L,
        KeyCode::RETURN
      </autogen>
    </item>

    <!-- Option_R to Option_R. When you type Option_R only, send Escape -->
    <item>
      <name>Option_R to Option_R</name>
      <appendix>(+ When you type Option_R only, send Escape)</appendix>
      <identifier>private.option_r_to_option_r_send_escape</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_R,
        KeyCode::VK_LAZY_OPTION_R,
        KeyCode::ESCAPE,
        KeyCode::VK_LOCK_ALL_FORCE_OFF
      </autogen>
    </item>

    <!-- Command_L to SYMBOLS. When you type Command_L only, send Space -->
    <item>
      <name>Use the Command_L key as SYMBOLS key.</name>
      <appendix>* Send a space key event when the Command_L is pressed alone.</appendix>
      <identifier>private.command_l_to_symbols</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_L,
        KeyCode::VK_MODIFIER_SYMBOLS,
        KeyCode::SPACE
      </autogen>
    </item>

    <!-- Command_L to SYMBOLS. When you type Command_L only, send Space -->
    <item>
      <name>Use the Command_L key as SYMBOLS key (another version)</name>
      <appendix>This version keeps the space key behavior while fast typing.</appendix>
      <appendix></appendix>
      <appendix>* Send a space key event when the Command_L is released before another key is released.</appendix>
      <appendix>For example:</appendix>
      <appendix><![CDATA[  Command_L down -> T down -> T up => SYMBOLS+T  ]]></appendix>
      <appendix><![CDATA[  Command_L down -> T down -> Command_L => Space,T  ]]></appendix>
      <identifier>private.fast_command_l_to_symbols</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_L,

        KeyCode::VK_MODIFIER_SYMBOLS, ModifierFlag::COMMAND_L_TO_SYMBOLS,
        KeyCode::SPACE
      </autogen>

      <block>
        <modifier_only>ModifierFlag::COMMAND_L_TO_SYMBOLS</modifier_only>

        <autogen>
          __BlockUntilKeyUp__
          KeyCode::COMMAND_L
        </autogen>
      </block>
    </item>

    <!-- Command_R to Shift_R. When you type Command_R only, send Space -->
    <item>
      <name>Use the Command_R key as Shift_R key.</name>
      <appendix>* Send a space key event when the Command_R is pressed alone.</appendix>
      <identifier>private.command_r_to_shift_r</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_R,
        KeyCode::SHIFT_R,
        KeyCode::SPACE
      </autogen>
    </item>

    <!-- Command_R to Shift_R. When you type Command_R only, send Space -->
    <item>
      <name>Use the Command_R key as Shift_R key (another version)</name>
      <appendix>This version keeps the space key behavior while fast typing.</appendix>
      <appendix></appendix>
      <appendix>* Send a space key event when the Command_R is released before another key is released.</appendix>
      <appendix>For example:</appendix>
      <appendix><![CDATA[  Command_R down -> T down -> T up => Shift+T  ]]></appendix>
      <appendix><![CDATA[  Command_R down -> T down -> Command_R => Space,T  ]]></appendix>
      <identifier>private.fast_command_r_to_shift_r</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_R,

        KeyCode::SHIFT_R, ModifierFlag::COMMAND_R_TO_SHIFT_R,
        KeyCode::SPACE
      </autogen>

      <block>
        <modifier_only>ModifierFlag::COMMAND_R_TO_SHIFT_R</modifier_only>

        <autogen>
          __BlockUntilKeyUp__
          KeyCode::COMMAND_R
        </autogen>
      </block>
    </item>

    <!-- Space to Command_L -->
    <item>
      <name>Space to Command_L</name>
      <identifier>remap.space_to_command_l</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::SPACE,
        KeyCode::VK_LAZY_COMMAND_L
      </autogen>
    </item>

    <item>
      <name>Symbols layer</name>
      <appendix>* Overlay Numbers Row above the Home Row</appendix>
      <appendix>* Overlay Symbols onto the Home Row</appendix>
      <appendix>* Overlay Extra Symbols below the Home Row</appendix>
      <identifier>private.symbols_layer</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <!-- Overlay Numbers above the Home Row -->
      <autogen>
        __KeyToKey__
        KeyCode::Q, ModifierFlag::SYMBOLS,
        KeyCode::KEY_1
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::W, ModifierFlag::SYMBOLS,
        KeyCode::KEY_2
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::E, ModifierFlag::SYMBOLS,
        KeyCode::KEY_3
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::R, ModifierFlag::SYMBOLS,
        KeyCode::KEY_4
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::T, ModifierFlag::SYMBOLS,
        KeyCode::KEY_5
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::Y, ModifierFlag::SYMBOLS,
        KeyCode::KEY_6
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::U, ModifierFlag::SYMBOLS,
        KeyCode::KEY_7
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::I, ModifierFlag::SYMBOLS,
        KeyCode::KEY_8
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::O, ModifierFlag::SYMBOLS,
        KeyCode::KEY_9
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::P, ModifierFlag::SYMBOLS,
        KeyCode::KEY_0
      </autogen>

      <!-- Overlay Symbols onto the Home Row -->
      <autogen>
        __KeyToKey__
        KeyCode::A, ModifierFlag::SYMBOLS,
        KeyCode::KEY_1, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::S, ModifierFlag::SYMBOLS,
        KeyCode::KEY_2, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::D, ModifierFlag::SYMBOLS,
        KeyCode::KEY_3, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::F, ModifierFlag::SYMBOLS,
        KeyCode::KEY_4, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::G, ModifierFlag::SYMBOLS,
        KeyCode::KEY_5, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::SYMBOLS,
        KeyCode::KEY_6, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::SYMBOLS,
        KeyCode::KEY_7, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::SYMBOLS,
        KeyCode::KEY_8, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::SYMBOLS,
        KeyCode::KEY_9, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON, ModifierFlag::SYMBOLS,
        KeyCode::KEY_0, ModifierFlag::SHIFT_L
      </autogen>

      <!-- Overlay Extra Symbols below the Home Row -->
      <autogen>
        __KeyToKey__
        KeyCode::Z, ModifierFlag::SYMBOLS,
        KeyCode::KEY_1, ModifierFlag::OPTION_R
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::X, ModifierFlag::SYMBOLS,
        KeyCode::KEY_2, ModifierFlag::OPTION_L
      </autogen>
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::D, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_3, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::F, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_4, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::G, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_5, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::H, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_6, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::J, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_7, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::K, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_8, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::L, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_9, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->
      <!-- <autogen> -->
      <!--   __KeyToKey__ -->
      <!--   KeyCode::SEMICOLON, ModifierFlag::SYMBOLS, -->
      <!--   KeyCode::KEY_0, ModifierFlag::SHIFT_L -->
      <!-- </autogen> -->

      <!-- Overlay Functional keys below the Home Row -->
    </item>

    <item>
      <name>Shifts to Volume</name>
      <identifier>private.shifts_to_volume</identifier>
      <device_not>DeviceVendor::ARDUINO_LLC, DeviceProduct::DIVERGE3</device_not>

      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_L, ModifierFlag::OPTION_L,
        ConsumerKeyCode::VOLUME_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_R, ModifierFlag::OPTION_L,
        ConsumerKeyCode::VOLUME_UP
      </autogen>
    </item>
  </item>

  <item>
    <name>Main layout</name>

    <!-- Left Bracket to Minus -->
    <item>
      <name>Left Bracket to Minus</name>
      <identifier>private.left_bracket_to_minus</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT,
        KeyCode::MINUS
      </autogen>
    </item>

    <!-- Right Bracket to Equal -->
    <item>
      <name>Right Bracket to Equal</name>
      <identifier>private.right_bracket_to_equal</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_RIGHT,
        KeyCode::EQUAL
      </autogen>
    </item>

    <!-- Return to parentheses -->
    <item>
      <name>Return to Parentheses</name>
      <identifier>private.return_to_parentheses</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::RETURN,
        ModifierFlag::NONE,
        KeyCode::KEY_9,
        ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::RETURN,
        ModifierFlag::SHIFT_L,
        KeyCode::KEY_0,
        ModifierFlag::SHIFT_L
      </autogen>
    </item>

    <!-- Shifts to Parentheses and brackets -->
    <item>
      <name>Shifts to Parentheses and brackets</name>
      <identifier>private.shifts_to_parentheses_and_brackets</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_R,
        KeyCode::BRACKET_RIGHT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_L,
        KeyCode::BRACKET_LEFT
      </autogen>
    </item>

    <!-- Space to Shift_L -->
    <item>
      <name>Space to Shift_L, and use it as sticky modifier with lock</name>
      <identifier>private.space_to_shift_l</identifier>

      <include path="/Applications/Karabiner.app/Contents/Resources/include/checkbox/commons/sticky_modifiers/WITH_LOCK.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>SPACE</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>SHIFT_L</replacementvalue>
        </replacementdef>
      </include>
    </item>

    <!-- Option_R to Option_L and use it as sticky modifier with lock -->
    <item>
      <name>Option_R to Option_L and use it as sticky modifier with lock</name>
      <identifier>private.option_r_to_option_l</identifier>

      <include path="/Applications/Karabiner.app/Contents/Resources/include/checkbox/commons/sticky_modifiers/WITH_LOCK.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>OPTION_R</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>OPTION_L</replacementvalue>
        </replacementdef>
      </include>
    </item>

    <!-- Control_L to Left Click -->
    <item>
      <name>Control_L to Left Click</name>
      <identifier>private.control_l_to_left_click</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::CONTROL_L,
        PointingButton::LEFT
      </autogen>
    </item>
  </item>

  <item>
    <name>Control shortcuts</name>

    <item>
      <name>Control + {H,J,K,L} to LEFT,DOWN,UP,RIGHT (à la Vim)</name>
      <identifier>private.ctrl_hjkl_to_left_down_up_right</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>

    <item>
      <name>Control + Inverted T {I,J,K,L} to {UP,LEFT,DOWN,RIGHT}</name>
      <identifier>private.control_ijkl_to_up_left_down_right</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>

    <item>
      <!-- TODO -->
      <name>Control + ; to kill to end of line</name>
      <identifier>private.control_comma_to_kill</identifier>
    </item>
  </item>

</root>
