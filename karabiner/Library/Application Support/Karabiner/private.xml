<?xml version="1.0"?>
<root>
  <!-- For "space_to_control" -->
  <modifierdef>SPACE_TO_CONTROL</modifierdef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Atom</name>
    <url type="file">/Applications/Atom.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Calendar</name>
    <url type="file">/Applications/Calendar.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Chrome</name>
    <url type="file">/Applications/Google Chrome.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Emacs</name>
    <url type="file">/usr/local/Cellar/emacs-plus/25.1/Emacs.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_FFD</name>
    <url type="file">/Applications/FirefoxDeveloperEdition.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Hipchat</name>
    <url type="file">/Applications/HipChat.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_iTerm</name>
    <url type="file">/Applications/iTerm.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Skype</name>
    <url type="file">/Applications/Skype.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Slack</name>
    <url type="file">/Applications/Slack.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Spotify</name>
    <url type="file">/Applications/Spotify.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_VLC</name>
    <url type="file">/Applications/VLC.app</url>
  </vkopenurldef>

  <replacementdef>
    <replacementname>LAUNCHER_MODE_V2_EXTRA</replacementname>
    <replacementvalue>
      <![CDATA[
        <autogen>
          __KeyDownUpToKey__
          KeyCode::A,
          KeyCode::VK_OPEN_URL_APP_Atom,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::R,
          KeyCode::VK_OPEN_URL_APP_Calendar,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::C,
          KeyCode::VK_OPEN_URL_APP_Chrome,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::E,
          KeyCode::VK_OPEN_URL_APP_Emacs,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::B,
          KeyCode::VK_OPEN_URL_APP_FFD,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::H,
          KeyCode::VK_OPEN_URL_APP_Hipchat,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::I,
          KeyCode::VK_OPEN_URL_APP_iTerm,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::S,
          KeyCode::VK_OPEN_URL_APP_Skype,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::K,
          KeyCode::VK_OPEN_URL_APP_Slack,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::P,
          KeyCode::VK_OPEN_URL_APP_Spotify,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::V,
          KeyCode::VK_OPEN_URL_APP_VLC,
        </autogen>
      ]]>
    </replacementvalue>
  </replacementdef>

  <replacementdef>
    <replacementname>HYPER_KEY</replacementname>
    <replacementvalue>
      KeyCode::COMMAND_L, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <replacementdef>
    <replacementname>HYPER_MOD</replacementname>
    <replacementvalue>
      ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <item>
    <name>Use the correct shift keys.</name>
    <identifier>private.correct_shift_keys</identifier>

    <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

    <autogen>--KeyToKey-- KeyCode::Y,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::U,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::I,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::O,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::P,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::H,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::J,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::K,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::L,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::N,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::M,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::COMMA,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::DOT,       ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::QUOTE,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
  </item>

  <item>
    <name>Shifts to Parentheses</name>
    <appendix>Shifts, when pressed alone, type parentheses.  When used with other keys they're normal shifts.</appendix>

    <identifier>private.shifts_to_parens</identifier>

    <!-- This is the basic mapping. -->
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::SHIFT_R,
      ModifierFlag::SHIFT_R | ModifierFlag::NONE,
      KeyCode::SHIFT_R,
      KeyCode::KEY_0,
      ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyOverlaidModifier--
      KeyCode::SHIFT_L,
      ModifierFlag::SHIFT_L | ModifierFlag::NONE,
      KeyCode::SHIFT_L,
      KeyCode::KEY_9,
      ModifierFlag::SHIFT_R
    </autogen>

    <!--
        Remap the "rolls" of () and )( because it's too easy to hit one
        before finishing the other, and there's no other reason to be
        pressing both shift keys at once anyway
    -->
    <autogen>
      --KeyToKey--
      KeyCode::SHIFT_L, ModifierFlag::SHIFT_R,
      KeyCode::KEY_0, ModifierFlag::SHIFT_L,
      KeyCode::KEY_9, ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      --KeyToKey--
      KeyCode::SHIFT_R, ModifierFlag::SHIFT_L,
      KeyCode::KEY_9, ModifierFlag::SHIFT_L,
      KeyCode::KEY_0, ModifierFlag::SHIFT_L
    </autogen>
  </item>

  <item>
    <name>Switch Profile (FN + Number Keys)</name>
    <identifier>private.switch_profile</identifier>

    <autogen>
      __KeyToKey__
      KeyCode::KEY_1, ModifierFlag::FN,
      KeyCode::VK_OPEN_URL_APP_KeyRemap4MacBook_Profile0
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::KEY_2, ModifierFlag::FN,
      KeyCode::VK_OPEN_URL_APP_KeyRemap4MacBook_Profile1
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::KEY_3, ModifierFlag::FN,
      KeyCode::VK_OPEN_URL_APP_KeyRemap4MacBook_Profile2
    </autogen>
  </item>

  <item>
    <name>Command keys to Escape</name>
    <appendix>(+ When you type Command_R only, send Escape)</appendix>
    <appendix>(+ When you type Command_L only, send Escape)</appendix>

    <identifier>remap.command_to_command_escape</identifier>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::COMMAND_L,
      KeyCode::COMMAND_L,
      KeyCode::ESCAPE
    </autogen>
    <autogen>
      __KeyOverlaidModifier__
      KeyCode::COMMAND_R,
      KeyCode::COMMAND_R,
      KeyCode::ESCAPE
    </autogen>
  </item>

  <item>
    <name>Use the space key as left control key when you press keys while holding space key.</name>
    <appendix></appendix>
    <appendix>For example:</appendix>
    <appendix><![CDATA[  Space down -> T down -> T up => Control-T  ]]></appendix>
    <appendix><![CDATA[  Space down -> T down -> Space up => Space,T  ]]></appendix>
    <identifier>remap.space_to_control</identifier>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::SPACE,

      KeyCode::VK_LAZY_CONTROL_L, ModifierFlag::SPACE_TO_CONTROL,
      KeyCode::SPACE
    </autogen>

    <block>
      <modifier_only>ModifierFlag::SPACE_TO_CONTROL</modifier_only>

      <autogen>
        __BlockUntilKeyUp__
        KeyCode::SPACE
      </autogen>
    </block>
  </item>

  <item>
    <name>Remap Caps Lock to Delete</name>
    <appendix>OS X doesn't have a Delete. This maps Caps lock (F19) to Delete.</appendix>
    <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>

    <identifier>private.f19_to_delete</identifier>

    <autogen>
      --KeyToKey--
      KeyCode::F19,
      KeyCode::DELETE
    </autogen>
  </item>

  <item>
    <name>Change Option keys</name>

    <item>
      <name>Option_R to Hyper</name>
      <appendix>(+ When you type Option_R only, send Bracket_Right)</appendix>
      <identifier>private.option_r_to_hyper</identifier>

      <!-- I took this helpful mapping from Steve Losh's post
           http://stevelosh.com/blog/2012/10/a-modern-space-cadet -->

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_R, {{ HYPER_KEY }}, KeyCode::BRACKET_RIGHT
      </autogen>
    </item>

    <item>
      <name>Option_L to Hyper</name>
      <appendix>(+ When you type Option_L only, send Bracket_Left)</appendix>
      <identifier>private.option_l_to_hyper</identifier>

      <!-- I took this helpful mapping from Steve Losh's post
           http://stevelosh.com/blog/2012/10/a-modern-space-cadet -->

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L, {{ HYPER_KEY }}, KeyCode::BRACKET_LEFT
      </autogen>
    </item>

    <item>
      <name>Option_R to Bracket_Right</name>
      <appendix>(+ When you type Option_R only, send Bracket Right)</appendix>
      <identifier>private.option_r_to_bracket_r</identifier>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_R,
        KeyCode::OPTION_R,
        KeyCode::BRACKET_RIGHT
      </autogen>
    </item>

    <item>
      <name>Option_L to Bracket_Left</name>
      <appendix>(+ When you type Option_L only, send Bracket Left)</appendix>
      <identifier>private.option_l_to_bracket_l</identifier>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L,
        KeyCode::OPTION_L,
        KeyCode::BRACKET_LEFT
      </autogen>
    </item>
  </item>

 <item>
    <name>Right Command Shortcuts</name>

    <item>
      <name>Home Row Numbers Overlay</name>
      <appendix>Overlay 1234567890 onto the home row (ASDFGHJKL;)</appendix>
      <identifier>private.command_r_to_homerow_numbers</identifier>

      <autogen>__KeyToKey__ KeyCode::A, ModifierFlag::COMMAND_R, KeyCode::KEY_1</autogen>
      <autogen>__KeyToKey__ KeyCode::S, ModifierFlag::COMMAND_R, KeyCode::KEY_2</autogen>
      <autogen>__KeyToKey__ KeyCode::D, ModifierFlag::COMMAND_R, KeyCode::KEY_3</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::KEY_4</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::COMMAND_R, KeyCode::KEY_5</autogen>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::COMMAND_R, KeyCode::KEY_6</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::COMMAND_R, KeyCode::KEY_7</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::COMMAND_R, KeyCode::KEY_8</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_R, KeyCode::KEY_9</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::COMMAND_R, KeyCode::KEY_0</autogen>
    </item>
  </item>

  <item>
    <name>Control shortcuts</name>

    <item>
      <name>Control + {H,J,K,L} to LEFT,DOWN,UP,RIGHT (à la Vim)</name>
      <identifier>private.ctrl_hjkl_to_left_down_up_right</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>

    <item>
      <name>Control + Inverted T {I,J,K,L} to {UP,LEFT,DOWN,RIGHT}</name>
      <identifier>private.control_ijkl_to_up_left_down_right</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>

    <item>
      <name>Control + ; to kill to end of line</name>
      <identifier>private.control_comma_to_kill</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>
  </item>

  <item>
    <name>Hyper shortcuts</name>

    <item>
      <name>Hyper + Semicolon to add tilde</name>
      <identifier>private.hyper_semicolon_add_tilde</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::SEMICOLON, {{ HYPER_MOD }}, KeyCode::E, ModifierFlag::OPTION_L
      </autogen>
    </item>

    <item>
      <name>Hyper + N to add n tilde (~)</name>
      <identifier>private.hyper_n_add_tilde</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::N, {{ HYPER_MOD }}, KeyCode::N, ModifierFlag::OPTION_L
      </autogen>
    </item>

    <item>
      <name>
        Hyper + brackets to move focus to previous/next tab in application
      </name>
      <identifier>private.hyper_to_command_shift_brackets</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT, {{ HYPER_MOD }},
        KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_RIGHT, {{ HYPER_MOD }},
        KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R
      </autogen>
    </item>
  </item>
</root>
