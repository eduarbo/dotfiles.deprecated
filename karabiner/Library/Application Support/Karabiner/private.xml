<?xml version="1.0"?>
<root>
  <!-- For "space_to_control" -->
  <modifierdef>COMMAND_R_TO_CONTROL_L</modifierdef>
  <modifierdef>PARENTHESES</modifierdef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Calendar</name>
    <url type="file">/Applications/Calendar.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Chrome</name>
    <url type="file">/Applications/Google Chrome.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Dashlane</name>
    <url type="file">/Applications/Dashlane.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Emacs</name>
    <url type="file">/usr/local/Cellar/emacs/25.1/Emacs.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_FFD</name>
    <url type="file">/Applications/FirefoxDeveloperEdition.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Hipchat</name>
    <url type="file">/Applications/HipChat.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_iTerm</name>
    <url type="file">/Applications/iTerm.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Skype</name>
    <url type="file">/Applications/Skype.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Slack</name>
    <url type="file">/Applications/Slack.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_Spotify</name>
    <url type="file">/Applications/Spotify.app</url>
  </vkopenurldef>

  <vkopenurldef>
    <name>KeyCode::VK_OPEN_URL_APP_VLC</name>
    <url type="file">/Applications/VLC.app</url>
  </vkopenurldef>

  <replacementdef>
    <replacementname>LAUNCHER_MODE_V2_EXTRA</replacementname>
    <replacementvalue>
      <![CDATA[
        <autogen>
          __KeyDownUpToKey__
          KeyCode::A,
          KeyCode::VK_OPEN_URL_APP_Calendar,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::C,
          KeyCode::VK_OPEN_URL_APP_Chrome,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::D,
          KeyCode::VK_OPEN_URL_APP_Dashlane,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::E,
          KeyCode::VK_OPEN_URL_APP_Emacs,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::B,
          KeyCode::VK_OPEN_URL_APP_FFD,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::H,
          KeyCode::VK_OPEN_URL_APP_Hipchat,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::I,
          KeyCode::VK_OPEN_URL_APP_iTerm,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::S,
          KeyCode::VK_OPEN_URL_APP_Skype,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::K,
          KeyCode::VK_OPEN_URL_APP_Slack,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::P,
          KeyCode::VK_OPEN_URL_APP_Spotify,
        </autogen>

        <autogen>
          __KeyDownUpToKey__
          KeyCode::V,
          KeyCode::VK_OPEN_URL_APP_VLC,
        </autogen>
      ]]>
    </replacementvalue>
  </replacementdef>

  <replacementdef>
    <replacementname>HYPER_KEY</replacementname>
    <replacementvalue>
      KeyCode::COMMAND_L, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <replacementdef>
    <replacementname>HYPER_MOD</replacementname>
    <replacementvalue>
      ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::NONE
    </replacementvalue>
  </replacementdef>

  <item>
    <name>Option layout</name>

      <item>
        <name>Overlay Symbols above the Home Row</name>
        <identifier>private.symbols_above_home_row</identifier>

        <autogen>
          __KeyToKey__
          KeyCode::Q, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_1, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::W, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_2, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::E, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_3, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::R, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_4, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::T, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_5, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::Y, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_6, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::U, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_7, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::I, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_8, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::O, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::BACKSLASH, ModifierFlag::OPTION_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::P, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::BACKSLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::TAB, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_1, ModifierFlag::OPTION_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          ConsumerKeyCode::BRIGHTNESS_UP
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          ConsumerKeyCode::MUSIC_PREV
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::BACKSLASH, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          ConsumerKeyCode::MUSIC_NEXT
        </autogen>
      </item>

      <item>
        <name>Overlay Numbers Row onto the Home Row</name>
        <appendix>Overlay 1234567890-= onto the home row</appendix>
        <identifier>private.numbers_row_onto_home_row</identifier>

        <autogen>
          __KeyToKey__
          KeyCode::D, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_3
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::A, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_1
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::S, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_2
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::D, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_3
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::F, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_4
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::G, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_5
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::H, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_6
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::J, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_7
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::K, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_8
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::L, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_9
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::SEMICOLON, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::KEY_0
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::QUOTE, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          ConsumerKeyCode::BRIGHTNESS_DOWN
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::RETURN, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          ConsumerKeyCode::MUSIC_PLAY
        </autogen>
      </item>

      <item>
        <name>Overlay Functional keys below the Home Row</name>
        <identifier>private.functional_keys_below_home_row</identifier>

        <autogen>
          __KeyToKey__
          KeyCode::Z, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          ConsumerKeyCode::VOLUME_MUTE
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::N, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::N, ModifierFlag::OPTION_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::M, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::E, ModifierFlag::OPTION_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::COMMA, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::BACKQUOTE
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::DOT, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::SLASH, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::SLASH, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L
        </autogen>
      </item>

      <item>
        <name>Overlay Function keys to the Numbers Row</name>
        <identifier>private.function_keys_to_numbers_row</identifier>

        <autogen>
          __KeyToKey__
          KeyCode::BACKQUOTE, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_1, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F1
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_2, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F2
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_3, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F3
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_4, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F4
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_5, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F5
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_6, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F6
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_7, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F7
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_8, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F8
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_9, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F9
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::KEY_0, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F10
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::MINUS, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F11
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::EQUAL, ModifierFlag::OPTION_L | ModifierFlag::NONE,
          KeyCode::F12
        </autogen>
      </item>

      <item>
        <name>Shifts to Volume</name>
        <identifier>private.shifts_to_volume</identifier>

        <autogen>
          __KeyToKey__
          KeyCode::SHIFT_L, ModifierFlag::OPTION_L,
          ConsumerKeyCode::VOLUME_DOWN
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::SHIFT_R, ModifierFlag::OPTION_L,
          ConsumerKeyCode::VOLUME_UP
        </autogen>
      </item>
  </item>

  <item>
    <name>Main layout</name>

    <item>
      <name>Caps Lock to Delete</name>
      <appendix>OS X doesn't have a Delete. This maps Caps lock (F19) to Delete.</appendix>
      <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>

      <identifier>private.f19_to_delete</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::F19,
        KeyCode::DELETE
      </autogen>
    </item>

    <!-- Left Bracket to Minus -->
    <item>
      <name>Left Bracket to Minus</name>
      <identifier>private.left_bracket_to_minus</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT,
        KeyCode::MINUS
      </autogen>
    </item>

    <!-- Right Bracket to Equal -->
    <item>
      <name>Right Bracket to Equal</name>
      <identifier>private.right_bracket_to_equal</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_RIGHT,
        KeyCode::EQUAL
      </autogen>
    </item>

    <!-- Return to parentheses -->
    <item>
      <name>Return to Parentheses</name>
      <identifier>private.return_to_parentheses</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::RETURN,
        ModifierFlag::NONE,
        KeyCode::KEY_9,
        ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::RETURN,
        ModifierFlag::SHIFT_L,
        KeyCode::KEY_0,
        ModifierFlag::SHIFT_L
      </autogen>
    </item>

    <!-- Command_R to Command_L. When you type Command_R only, send Space -->
    <item>
      <name>Use the Command_R key as Control_L key when you press keys while holding Control_L key.</name>
      <appendix></appendix>
      <appendix>For example:</appendix>
      <appendix><![CDATA[  Command_R down -> T down -> T up => Control-T  ]]></appendix>
      <appendix><![CDATA[  Command_R down -> T down -> Space up => Space,T  ]]></appendix>
      <identifier>private.command_r_to_control_l</identifier>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_R,

        KeyCode::VK_LAZY_CONTROL_L, ModifierFlag::COMMAND_R_TO_CONTROL_L,
        KeyCode::SPACE
      </autogen>

      <block>
        <modifier_only>ModifierFlag::COMMAND_R_TO_CONTROL_L</modifier_only>

        <autogen>
          __BlockUntilKeyUp__
          KeyCode::SPACE
        </autogen>
      </block>
    </item>

    <!-- Shifts to Parentheses and brackets -->
    <item>
      <name>Shifts to Parentheses and brackets</name>
      <identifier>private.shifts_to_parentheses_and_brackets</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_R,
        KeyCode::BRACKET_RIGHT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::SHIFT_L,
        KeyCode::BRACKET_LEFT
      </autogen>
    </item>

    <!-- Space to Shift_L -->
    <item>
      <name>Space to Shift_L, and use it as sticky modifier with lock</name>
      <identifier>private.space_to_shift_l</identifier>

      <include path="/Applications/Karabiner.app/Contents/Resources/include/checkbox/commons/sticky_modifiers/WITH_LOCK.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>SPACE</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>SHIFT_L</replacementvalue>
        </replacementdef>
      </include>
    </item>

    <!-- Command_L to Command_L. When you type Command_L only, send Return -->
    <item>
      <name>Command_L to Command_L</name>
      <appendix>(+ When you type Command_L only, send Return)</appendix>

      <identifier>private.command_l_to_command_l</identifier>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::COMMAND_L,
        KeyCode::COMMAND_L,
        KeyCode::RETURN
      </autogen>
    </item>

    <!-- Option_L to Option_L. When you type Option_L only send Escape -->
    <item>
      <name>Option_L to Option_L</name>
      <appendix>(+ When you type Option_L only, send Escape and force off all locks)</appendix>
      <identifier>private.option_l_to_option_l</identifier>

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::OPTION_L,
        KeyCode::OPTION_L,
        KeyCode::ESCAPE,
        KeyCode::VK_LOCK_ALL_FORCE_OFF
      </autogen>
    </item>

    <!-- Option_R to Option_L and use it as sticky modifier with lock -->
    <item>
      <name>Option_R to Option_L and use it as sticky modifier with lock</name>
      <identifier>private.option_r_to_option_l</identifier>

      <include path="/Applications/Karabiner.app/Contents/Resources/include/checkbox/commons/sticky_modifiers/WITH_LOCK.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>OPTION_R</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>OPTION_L</replacementvalue>
        </replacementdef>
      </include>
    </item>

    <!-- Control_L to Left Click -->
    <item>
      <name>Control_L to Left Click</name>
      <identifier>private.control_l_to_left_click</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::CONTROL_L,
        PointingButton::LEFT
      </autogen>
    </item>
  </item>

  <item>
    <name>Control shortcuts</name>

    <item>
      <name>Control + {H,J,K,L} to LEFT,DOWN,UP,RIGHT (à la Vim)</name>
      <identifier>private.ctrl_hjkl_to_left_down_up_right</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>

    <item>
      <name>Control + Inverted T {I,J,K,L} to {UP,LEFT,DOWN,RIGHT}</name>
      <identifier>private.control_ijkl_to_up_left_down_right</identifier>

      <autogen>
        __KeyToKey__
        KeyCode::I, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT
      </autogen>
    </item>

    <item>
      <!-- TODO -->
      <name>Control + ; to kill to end of line</name>
      <identifier>private.control_comma_to_kill</identifier>
    </item>
  </item>

</root>
