<?xml version="1.0"?>
<root>
  <item>
    <name>Use the correct shift keys.</name>
    <identifier>private.correct_shift_keys</identifier>

    <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::SHIFT_L, KeyCode::VK_NONE</autogen>

    <autogen>--KeyToKey-- KeyCode::Y,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::U,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::I,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::O,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::P,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::H,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::J,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::K,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::L,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::N,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::M,         ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::COMMA,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::DOT,       ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
    <autogen>--KeyToKey-- KeyCode::QUOTE,     ModifierFlag::SHIFT_R, KeyCode::VK_NONE</autogen>
  </item>

  <item>
    <name>Shifts to Parentheses</name>
    <appendix>Shifts, when pressed alone, type parentheses.  When used with other keys they're normal shifts.</appendix>

    <identifier>private.shifts_to_parens</identifier>

    <!-- This is the basic mapping. -->
    <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
    <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_R</autogen>

    <!--
        Remap the "rolls" of () and )( because it's too easy to hit one
        before finishing the other, and there's no other reason to be
        pressing both shift keys at once anyway
    -->
    <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
    <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
  </item>

  <item>
    <name>Switch Profile (FN + Number Keys)</name>
    <identifier>private.switch_profile</identifier>
    <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_KeyRemap4MacBook_Profile0</autogen>
    <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_KeyRemap4MacBook_Profile1</autogen>
    <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_KeyRemap4MacBook_Profile2</autogen>
  </item>

  <item>
    <name>Change "hyper + bracket keys" to "move focus to previous/next tab in application".</name>
    <identifier>private.hyper_to_command_shift_brackets</identifier>
    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_LEFT,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
      KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::BRACKET_RIGHT,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
      KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R
    </autogen>
  </item>

  <item>
    <name>Remap Caps Lock to Delete</name>
    <appendix>OS X doesn't have a Delete. This maps Caps lock (F19) to Delete.</appendix>
    <appendix>You can use this key in your own custom keyboard shortcuts you create in apps.</appendix>

    <identifier>private.f19_to_delete</identifier>

    <autogen>
      --KeyToKey--
      KeyCode::F19,
      KeyCode::DELETE
    </autogen>
  </item>

  <item>
    <name>Control_R to Fn (When you type Fn only, send Escape</name>
    <identifier>private.fn_to_escape</identifier>
    <autogen>
      __KeyOverlaidModifier__
      KeyCode::CONTROL_R,

      KeyCode::FN,
      KeyCode::ESCAPE
    </autogen>
  </item>

  <item>
    <name>Option keys to Control</name>
    <appendix>(+ When you type Option_R only, send Bracket_Right</appendix>
    <appendix>(+ When you type Option_L only, send Bracket_Left</appendix>

    <identifier>remap.option_to_control_brackets</identifier>
    <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_L, KeyCode::CONTROL_L, KeyCode::BRACKET_LEFT</autogen>
    <autogen>__KeyOverlaidModifier__ KeyCode::OPTION_R, KeyCode::CONTROL_R, KeyCode::BRACKET_RIGHT</autogen>
  </item>

  <item>
    <name>Shift + Space to Hyper</name>
    <appendix>(Shift + Space to Hyper</appendix>
    <identifier>private.shift_space_to_Hyper</identifier>
    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      ModifierFlag::SHIFT_L,

      KeyCode::COMMAND_L,
      ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      ModifierFlag::SHIFT_R,

      KeyCode::COMMAND_L,
      ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      ModifierFlag::FN,

      KeyCode::SPACE,
      ModifierFlag::SHIFT_L
    </autogen>
  </item>

  <item>
    <name>Hyper custom shortcuts</name>
    <appendix>Adds shortcuts to arrow navigations to move with Hyper + HJKL</appendix>
    <appendix>Shortcut to add a tilde with Hyper + Semicolon</appendix>
    <appendix>Shortcut to add a N tilde with Hyper + N</appendix>

    <identifier>private.f-zero</identifier>

    <autogen>
      __KeyToKey__
      KeyCode::H,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

      KeyCode::CURSOR_LEFT
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::J,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

      KeyCode::CURSOR_DOWN
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::K,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

      KeyCode::CURSOR_UP
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::L,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

      KeyCode::CURSOR_RIGHT
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::SEMICOLON,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

      KeyCode::E,
      ModifierFlag::OPTION_L
    </autogen>
    <autogen>
      __KeyToKey__
      KeyCode::N,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,

      KeyCode::N,
      ModifierFlag::OPTION_L
    </autogen>

  </item>
</root>
