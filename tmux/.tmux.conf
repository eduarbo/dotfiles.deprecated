# General ================================================================== {{{
setw -g xterm-keys on
set -g quiet on # Disable various messages

# Use something easier to type as the prefix.
set -g prefix C-f
unbind C-b
bind C-f send-prefix

set-option -g default-shell $SHELL

set -g default-terminal "screen-256color" # 256 colors please

set -g display-time 4000

set -g history-limit 50000 # Boost history

# set emacs style key binding
set -g status-keys emacs
# Use vim keybindings in copy mode
setw -g mode-keys vi

# focus events enabled for terminals that support them
set -g focus-events on

# clear both screen and history
bind -n C-l send-keys C-l \; run 'tmux clear-history'

# Relax!
set -sg escape-time 0
set -sg repeat-time 300

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# Reload the config.
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# aggresive resize
set -g aggressive-resize on

# Autorename sanely.
setw -g automatic-rename on

# http://superuser.com/questions/479600/how-can-i-prevent-tmux-exiting-with-ctrl-d
set-environment -g 'IGNOREEOF' 10 # Shell only exists after the 10th consecutive Ctrl-d

# Vim
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# }}}
# Navigation =============================================================== {{{

# create new session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# Saner splitting.
bind v split-window -h
bind s split-window -v
bind S choose-session

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys 'C-l'
bind C-j send-keys 'C-j'
bind C-h send-keys 'C-h'

bind -r H swap-window -t -1
bind -r L swap-window -t +1

# pane resizing
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

bind -r } next-window
bind -r { previous-window

# Window navigation
bind - last-window      # move to last active window

unbind x
unbind X
bind q kill-pane
bind Q kill-window

bind T break-pane -t :

# Toggle to maximize or restore the current pane
bind = resize-pane -Z

# Mouse
set -g mouse on

# }}}
# Copy mode ================================================================ {{{
bind ` copy-mode
unbind -t vi-copy Enter

bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy H start-of-line
bind -t vi-copy L end-of-line
# Display ================================================================== {{{

# Activity
setw -g monitor-activity on
set -g visual-activity off

# integration with clipboard and primary selection {{{

# move x clipboard into tmux paste buffer
unbind C-p
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
unbind C-y
bind C-y run "tmux save-buffer - | xclip -i"

#}}}

# Custom status bar
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-fg colour15
set -g status-bg colour16
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set -g status-left '#[fg=colour16,bg=colour15,bold] #S #[fg=colour15,bg=colour16,nobold]'
set -g status-right '#[fg=colour16,bg=colour8,nobold]#[fg=colour16,bg=colour8,bold] #h '
set -g window-status-format '#[fg=colour15,bg=colour16] #I  #W'
set -g window-status-current-format '#[fg=colour16,bg=colour3,nobold]#[fg=colour16,bg=colour3,bold] #I | #W #[fg=colour3,bg=colour16,nobold]'

# }}}
# Plugins ================================================================== {{{
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Automatic tpm installation
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
# Initializes TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}
