# General ================================================================== {{{
setw -g xterm-keys on

# Use something easier to type as the prefix.
set -g prefix C-f
unbind C-b
bind C-f send-prefix

set-option -g default-shell $SHELL

# Enable Italics
set -g default-terminal "xterm-256color"
# True Color
set -ga terminal-overrides ",xterm-256color:Tc"

set -g display-time 4000

set -g history-limit 50000 # Boost history

# set emacs style key binding
set -g status-keys emacs
# Use vim keybindings in copy mode
setw -g mode-keys vi

# focus events enabled for terminals that support them
set -g focus-events on

# clear both screen and history
bind l send-keys c-l \; clear-history

# Relax!
set -sg escape-time 10
set -sg repeat-time 1000

# Less stretching to get to the first item.
set -g base-index 1
setw -g pane-base-index 1

# aggresive resize
set -g aggressive-resize on

# Autorename sanely.
setw -g automatic-rename on

set-option -g renumber-windows on

# http://superuser.com/questions/479600/how-can-i-prevent-tmux-exiting-with-ctrl-d
set-environment -g 'IGNOREEOF' 10 # Shell only exists after the 10th consecutive Ctrl-d

# }}}
# Bindings =============================================================== {{{

# Reload the config.
unbind Space
bind Space source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# detach client
bind d detach

# choose a client to detach
bind D choose-client

bind C new-session
bind S choose-session
bind R command-prompt 'rename-session %%'
bind F command-prompt -p find-session 'switch-client -t %%'
bind -r [ switch-client -p
bind -r ] switch-client -n

bind c new-window
bind W choose-window
bind r command-prompt "rename-window %%"
bind Tab last-window
bind -r n next-window
bind -r N previous-window
# bind -r p previous-window
bind -r < swap-window -t -1
bind -r > swap-window -t +1
bind -r o rotate-window
bind -r O rotate-window -D

# display visible indicator of each pane
bind w display-panes
bind BSpace last-pane

# Toggle to maximize or restore the current pane
bind m resize-pane -Z

# Saner splitting.
bind v split-window -h
bind s split-window -v

bind -r L swap-pane -D       # swap current pane with the next one
bind -r H swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Cycle window layouts
bind -r "'" next-layout
bind -r '"' previous-layout

# copying and pasting
bind , copy-mode
bind . paste-buffer -s \015

bind x kill-pane
bind X kill-window
bind q confirm-before kill-session
bind Q confirm-before kill-server

# # clear both screen and history
# bind -n C-l send-keys C-l \; run 'sleep 0.05 && tmux clear-history'

bind T break-pane -t :

# colon :
bind \; command-prompt

# Mouse
set -g mouse on

# }}}
# Copy mode ================================================================ {{{
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line
# Display ================================================================== {{{

# Activity
setw -g monitor-activity on
set -g visual-activity off

# integration with clipboard and primary selection {{{

# move x clipboard into tmux paste buffer
unbind C-p
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
unbind C-y
bind C-y run "tmux save-buffer - | xclip -i"

#}}}

set -g set-titles on                        # set terminal title
set -g display-panes-time 1000

# Custom status bar
set -g status-interval 5
set -g status-fg brightblack
set -g status-bg default
set -g status-attr dim
set -g status-position bottom

set -g pane-border-fg brightblack
set -g pane-active-border-fg blue

set -g status-left-length 32
set -g status-left-style fg=brightwhite,bold
set -g status-left '#{?window_zoomed_flag,ÔÅ•  ,}#{pacmux_sessions} '

set -g status-right-style fg=white
set -g status-right '#{pacmux_overview}'

set -g window-status-separator ' '
set -g window-status-style fg=brightblack,bold,bg=black
set -g window-status-last-style default
set -g window-status-activity-style default
set -g window-status-bell-style default
set -g window-status-format '#{pacmux_window_flag} #I#[none,fg=brightblack]/#W'

set -g window-status-current-style fg=white,bold,bg=black
set -g window-status-current-format '#{pacmux_pacman} #I#[none,fg=white]/#W'


set -g message-fg brightyellow
set -g message-bg black

#window mode
setw -g mode-fg black
setw -g mode-bg brightgreen

# }}}
# Plugins ================================================================== {{{
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmuxinator/tmuxinator'
set -g @plugin 'christoomey/vim-tmux-navigator' # Smart pane switching with awareness of vim splits
set -g @plugin 'eduarbo/pacmux'

# Automatic tpm installation
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"
# Initializes TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}
