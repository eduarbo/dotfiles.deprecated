#!/usr/bin/env bash

DOT="$HOME/.dotfiles"
DOT_TARBALL_PATH="https://github.com/eduarbo/dotfiles/tarball/master"
DOT_GIT_REMOTE="git@github.com:eduarbo/dotfiles.git"

# # Ask for the administrator password upfront.
# sudo -v

# # Keep-alive: update existing `sudo` time stamp until the script has finished.
# while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &


####################################################################################
# # Help #
####################################################################################
if [[ "$1" == "-h" || "$1" == "--help" ]]; then

cat <<EOT
Usage: $(basename "$0") [options]

Options:
-h, --help           Print this help text

Copyright (c) Eduardo Ruiz
Licensed under the MIT license.
EOT

  exit
fi

# Test for known flags
for opt in "$@"
do
  case $opt in
    -s|--setup) _setup=true ;;
    -*|--*) e_warning "Warning: invalid option $opt" ;;
  esac
done


####################################################################################
# # Functions                                                                      #
####################################################################################
setup_pkg() {
  stow --adopt $1
  git checkout -- .
  stow -R $1
}

install_homebrew () {
  # Check for Homebrew
  if ! type_exists 'brew'; then
    e_header "Installing Homebrew..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

    brew analytics off

    e_header "Updating Homebrew..."
    brew update
    brew doctor

    brew tap "homebrew/bundle"
  fi
}

# Install latest git version
install_git () {
  if ! formula_exists 'git'; then
    e_header "Installing latest Git version..."
    brew install git
  fi
}

# Install Stow to link config files
install_stow () {
  if ! formula_exists 'stow'; then
    e_header "Installing Stow..."
    brew install stow
  fi
}

setup_dotfiles() {
  # If missing, download and extract the dotfiles repository
  if [[ ! -d $DOT ]]; then
    printf "$(tput setaf 7)Downloading dotfiles...\033[m\n"
    mkdir "${DOT}"
    # Get the tarball
    curl -fsSLo "${HOME}/dotfiles.tar.gz" "${DOT_TARBALL_PATH}"
    # Extract to the dotfiles directory
    tar -zxf "${HOME}/dotfiles.tar.gz" --strip-components 1 -C "${DOT}"
    # Remove the tarball
    rm -rf "${HOME}/dotfiles.tar.gz"
  fi
}

setup_dotfiles_repo() {
  # Check if current directory is a repo
  if ! $(git rev-parse --is-inside-work-tree &> /dev/null); then
    e_header "Initializing git repository..."
    git init
    git remote add origin $DOT_GIT_REMOTE
    git fetch origin master
    # Reset the index and working tree to the fetched HEAD
    # (submodules are cloned in the subsequent sync step)
    git reset --hard FETCH_HEAD
    # Remove any untracked files
    git clean -fd
  fi

  # sync with the remote repository
  e_header "Syncing dotfiles..."
  # Pull down the latest changes
  git pull --rebase origin master
}

setup() {
  setup_dotfiles
  cd "$DOT"
  source "./lib/utils"
  install_homebrew
  install_git
  install_stow
  setup_dotfiles_repo
}

install() {
  package_path=$DOT/$1
  if [[ ! -d $package_path ]]; then
    setup_pkg $1
    cd $package_path
    brew bundle
    [[ -f "$package_path/install" ]] && ./install
  fi
}

install_rest_of_packages() {
  echo
  e_header "Installing packages from many sources (pip, gem, npm). This will take some time..."
  $DOT/bin/bootstrap
}

install_macos_defaults() {
  # Ask before potentially overwriting MacOS defaults
  echo
  seek_confirmation "Warning: This step may modify your MacOs system defaults."

  if is_confirmed; then
    bash $DOT/bin/macosdefaults
    e_success "MacOS settings updated! You may need to restart."
  else
    printf "Skipped MacOS settings update."
  fi
}

####################################################################################
# # Link dotfiles                                                                  #
####################################################################################
# Ask before potentially overwriting files
seek_confirmation "Warning: This step may overwrite some of your existing dotfiles."

if is_confirmed; then
  setup_pkg git
  setup_pkg bash
  setup_pkg zsh
  setup_pkg spacemacs
  git clone git@github.com:syl20bnr/spacemacs.git "$HOME/.emacs.d"
  setup_pkg vim
  setup_pkg python
  setup_pkg tmux
  setup_pkg linters
  setup_pkg fonts
  setup_pkg karabiner
  setup_pkg hammerspoon
  setup_pkg kwm
  e_success "Dotfiles update complete!"
else
  printf "Aborting...\n"
  exit
fi
