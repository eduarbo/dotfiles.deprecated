{"entries":[{"name":"#pragma interface and implementation","path":"c_002b_002b-interface","type":"7. Extensions to the C++ Language"},{"name":"+load: Executing code before main","path":"executing-code-before-main","type":"8. GNU Objective-C features"},{"name":"128-bit integers","path":"_005f_005fint128","type":"6. Extensions to the C Language Family"},{"name":"@encode","path":"_0040encode","type":"8. GNU Objective-C features"},{"name":"AArch64 Options","path":"aarch64-options","type":"3. GCC Command Options"},{"name":"Actual Bugs We Haven't Fixed Yet","path":"actual-bugs","type":"11. Known Causes of Trouble"},{"name":"Adapteva Epiphany Options","path":"adapteva-epiphany-options","type":"3. GCC Command Options"},{"name":"Additional Floating Types","path":"floating-types","type":"6. Extensions to the C Language Family"},{"name":"Alpha Built-in Functions","path":"alpha-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Altera Nios II Built-in Functions","path":"altera-nios-ii-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Alternate Keywords","path":"alternate-keywords","type":"6. Extensions to the C Language Family"},{"name":"An Inline Function is As Fast As a Macro","path":"inline","type":"6. Extensions to the C Language Family"},{"name":"ARC Built-in Functions","path":"arc-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"ARC Options","path":"arc-options","type":"3. GCC Command Options"},{"name":"ARC SIMD Built-in Functions","path":"arc-simd-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Architecture","path":"architecture-implementation","type":"4. C Implementation-defined behavior"},{"name":"Argument Types","path":"argument-types","type":"6. Extensions to the C Language Family"},{"name":"Arithmetic on void- and Function-Pointers","path":"pointer-arith","type":"6. Extensions to the C Language Family"},{"name":"ARM ACLE Intrinsics","path":"arm-acle-intrinsics","type":"6. Extensions to the C Language Family"},{"name":"ARM iWMMXt Built-in Functions","path":"arm-iwmmxt-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"ARM NEON Intrinsics","path":"arm-neon-intrinsics","type":"6. Extensions to the C Language Family"},{"name":"ARM Options","path":"arm-options","type":"3. GCC Command Options"},{"name":"ARM Pragmas","path":"arm-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Arrays and pointers","path":"arrays-and-pointers-implementation","type":"4. C Implementation-defined behavior"},{"name":"Arrays of Length Zero","path":"zero-length","type":"6. Extensions to the C Language Family"},{"name":"Arrays of Variable Length","path":"variable-length","type":"6. Extensions to the C Language Family"},{"name":"Assembler Instructions with C Expression Operands","path":"extended-asm","type":"6. Extensions to the C Language Family"},{"name":"Attribute Syntax","path":"attribute-syntax","type":"6. Extensions to the C Language Family"},{"name":"AVR Built-in Functions","path":"avr-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"AVR Options","path":"avr-options","type":"3. GCC Command Options"},{"name":"Backwards Compatibility","path":"backwards-compatibility","type":"7. Extensions to the C++ Language"},{"name":"Binary Compatibility","path":"compatibility","type":"9. Binary Compatibility"},{"name":"Binary constants using the ‘0b’ prefix","path":"binary-constants","type":"6. Extensions to the C Language Family"},{"name":"Blackfin Built-in Functions","path":"blackfin-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Blackfin Options","path":"blackfin-options","type":"3. GCC Command Options"},{"name":"Brief description of gcov data files","path":"gcov-data-files","type":"10. gcov"},{"name":"Built-in functions for memory model aware atomic operations","path":"_005f_005fatomic-builtins","type":"6. Extensions to the C Language Family"},{"name":"Built-in Functions Specific to Particular Target Machines","path":"target-builtins","type":"6. Extensions to the C Language Family"},{"name":"C Implementation-defined behavior","path":"c-implementation","type":"4. C Implementation-defined behavior"},{"name":"C++ Implementation-defined behavior","path":"c_002b_002b-implementation","type":"5. C++ Implementation-defined behavior"},{"name":"C++ Style Comments","path":"c_002b_002b-comments","type":"6. Extensions to the C Language Family"},{"name":"C++-Specific Variable, Function, and Type Attributes","path":"c_002b_002b-attributes","type":"7. Extensions to the C++ Language"},{"name":"C6X Options","path":"c6x-options","type":"3. GCC Command Options"},{"name":"c99-like fast enumeration syntax","path":"c99_002dlike-fast-enumeration-syntax","type":"8. GNU Objective-C features"},{"name":"Case Ranges","path":"case-ranges","type":"6. Extensions to the C Language Family"},{"name":"Cast to a Union Type","path":"cast-to-union","type":"6. Extensions to the C Language Family"},{"name":"Certain Changes We Don't Want to Make","path":"non_002dbugs","type":"11. Known Causes of Trouble"},{"name":"Characters","path":"characters-implementation","type":"4. C Implementation-defined behavior"},{"name":"Cilk Plus C/C++ language extension Built-in Functions.","path":"cilk-plus-builtins","type":"6. Extensions to the C Language Family"},{"name":"Common Misunderstandings with GNU C++","path":"c_002b_002b-misunderstandings","type":"11. Known Causes of Trouble"},{"name":"compatibility_alias","path":"compatibility_005falias","type":"8. GNU Objective-C features"},{"name":"Compiling C++ Programs","path":"invoking-g_002b_002b","type":"3. GCC Command Options"},{"name":"Complex Numbers","path":"complex","type":"6. Extensions to the C Language Family"},{"name":"Compound Literals","path":"compound-literals","type":"6. Extensions to the C Language Family"},{"name":"Conditionally-supported behavior","path":"conditionally_002dsupported-behavior","type":"5. C++ Implementation-defined behavior"},{"name":"Conditionals with Omitted Operands","path":"conditionals","type":"6. Extensions to the C Language Family"},{"name":"Constant string objects","path":"constant-string-objects","type":"8. GNU Objective-C features"},{"name":"Constraint Modifier Characters","path":"modifiers","type":"6. Extensions to the C Language Family"},{"name":"Constraints for asm Operands","path":"constraints","type":"6. Extensions to the C Language Family"},{"name":"Constraints for Particular Machines","path":"machine-constraints","type":"6. Extensions to the C Language Family"},{"name":"Constructing Function Calls","path":"constructing-calls","type":"6. Extensions to the C Language Family"},{"name":"Controlling Names Used in Assembler Code","path":"asm-labels","type":"6. Extensions to the C Language Family"},{"name":"CR16 Options","path":"cr16-options","type":"3. GCC Command Options"},{"name":"CRIS Options","path":"cris-options","type":"3. GCC Command Options"},{"name":"Darwin Format Checks","path":"darwin-format-checks","type":"6. Extensions to the C Language Family"},{"name":"Darwin Options","path":"darwin-options","type":"3. GCC Command Options"},{"name":"Darwin Pragmas","path":"darwin-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Data file relocation to support cross-profiling","path":"cross_002dprofiling","type":"10. gcov"},{"name":"DEC Alpha Options","path":"dec-alpha-options","type":"3. GCC Command Options"},{"name":"Decimal Floating Types","path":"decimal-float","type":"6. Extensions to the C Language Family"},{"name":"Declarators","path":"declarators-implementation","type":"4. C Implementation-defined behavior"},{"name":"Declare and Define Static Members","path":"static-definitions","type":"11. Known Causes of Trouble"},{"name":"Declaring Attributes of Functions","path":"function-attributes","type":"6. Extensions to the C Language Family"},{"name":"Defining Global Register Variables","path":"global-reg-vars","type":"6. Extensions to the C Language Family"},{"name":"Deprecated Features","path":"deprecated-features","type":"7. Extensions to the C++ Language"},{"name":"Designated Initializers","path":"designated-inits","type":"6. Extensions to the C Language Family"},{"name":"Diagnostic Pragmas","path":"diagnostic-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Directly-mapped Integer Functions","path":"directly_002dmapped-integer-functions","type":"6. Extensions to the C Language Family"},{"name":"Directly-mapped Media Functions","path":"directly_002dmapped-media-functions","type":"6. Extensions to the C Language Family"},{"name":"Disappointments and Misunderstandings","path":"disappointments","type":"11. Known Causes of Trouble"},{"name":"Dollar Signs in Identifier Names","path":"dollar-signs","type":"6. Extensions to the C Language Family"},{"name":"Double-Word Integers","path":"long-long","type":"6. Extensions to the C Language Family"},{"name":"Dynamically registering methods","path":"dynamically-registering-methods","type":"8. GNU Objective-C features"},{"name":"Environment","path":"environment-implementation","type":"4. C Implementation-defined behavior"},{"name":"Environment Variables Affecting GCC","path":"environment-variables","type":"3. GCC Command Options"},{"name":"Exception handling","path":"exception-handling","type":"5. C++ Implementation-defined behavior"},{"name":"Exceptions","path":"exceptions","type":"8. GNU Objective-C features"},{"name":"Extensions to the C Language Family","path":"c-extensions","type":"6. Extensions to the C Language Family"},{"name":"Extensions to the C++ Language","path":"c_002b_002b-extensions","type":"7. Extensions to the C++ Language"},{"name":"Extracting the function pointer from a bound pointer to member function","path":"bound-member-functions","type":"7. Extensions to the C++ Language"},{"name":"Fast enumeration","path":"fast-enumeration","type":"8. GNU Objective-C features"},{"name":"Fast enumeration details","path":"fast-enumeration-details","type":"8. GNU Objective-C features"},{"name":"Fast enumeration protocol","path":"fast-enumeration-protocol","type":"8. GNU Objective-C features"},{"name":"Fixed Header Files","path":"fixed-headers","type":"11. Known Causes of Trouble"},{"name":"Fixed-Point Types","path":"fixed_002dpoint","type":"6. Extensions to the C Language Family"},{"name":"Floating point","path":"floating-point-implementation","type":"4. C Implementation-defined behavior"},{"name":"Format Checks Specific to Particular Target Machines","path":"target-format-checks","type":"6. Extensions to the C Language Family"},{"name":"Forwarding hook","path":"forwarding-hook","type":"8. GNU Objective-C features"},{"name":"FR-V Built-in Functions","path":"fr_002dv-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"FR30 Options","path":"fr30-options","type":"3. GCC Command Options"},{"name":"FRV Options","path":"frv-options","type":"3. GCC Command Options"},{"name":"Function Multiversioning","path":"function-multiversioning","type":"7. Extensions to the C++ Language"},{"name":"Function Names as Strings","path":"function-names","type":"6. Extensions to the C Language Family"},{"name":"Function Specific Option Pragmas","path":"function-specific-option-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Garbage Collection","path":"garbage-collection","type":"8. GNU Objective-C features"},{"name":"GCC Command Options","path":"invoking-gcc","type":"3. GCC Command Options"},{"name":"gcov","path":"gcov","type":"10. gcov"},{"name":"Getting the Return or Frame Address of a Function","path":"return-address","type":"6. Extensions to the C Language Family"},{"name":"GNU Objective-C features","path":"objective_002dc","type":"8. GNU Objective-C features"},{"name":"GNU Objective-C runtime API","path":"gnu-objective_002dc-runtime-api","type":"8. GNU Objective-C features"},{"name":"GNU/Linux Options","path":"gnu_002flinux-options","type":"3. GCC Command Options"},{"name":"H8/300 Options","path":"h8_002f300-options","type":"3. GCC Command Options"},{"name":"Half-Precision Floating Point","path":"half_002dprecision","type":"6. Extensions to the C Language Family"},{"name":"Hardware Models and Configurations","path":"submodel-options","type":"3. GCC Command Options"},{"name":"Hex Floats","path":"hex-floats","type":"6. Extensions to the C Language Family"},{"name":"Hints","path":"hints-implementation","type":"4. C Implementation-defined behavior"},{"name":"HPPA Options","path":"hppa-options","type":"3. GCC Command Options"},{"name":"i386 and x86-64 Windows Options","path":"i386-and-x86_002d64-windows-options","type":"3. GCC Command Options"},{"name":"IA-64 Options","path":"ia_002d64-options","type":"3. GCC Command Options"},{"name":"IBM RS/6000 and PowerPC Options","path":"rs_002f6000-and-powerpc-options","type":"3. GCC Command Options"},{"name":"Identifiers","path":"identifiers-implementation","type":"4. C Implementation-defined behavior"},{"name":"Implicit Copy-Assignment for Virtual Bases","path":"copy-assignment","type":"11. Known Causes of Trouble"},{"name":"Incompatibilities of GCC","path":"incompatibilities","type":"11. Known Causes of Trouble"},{"name":"Incomplete enum Types","path":"incomplete-enums","type":"6. Extensions to the C Language Family"},{"name":"Inquiring on Alignment of Types or Variables","path":"alignment","type":"6. Extensions to the C Language Family"},{"name":"Integers","path":"integers-implementation","type":"4. C Implementation-defined behavior"},{"name":"Intel 386 and AMD x86-64 Options","path":"i386-and-x86_002d64-options","type":"3. GCC Command Options"},{"name":"Interoperation","path":"interoperation","type":"11. Known Causes of Trouble"},{"name":"Introduction to gcov","path":"gcov-intro","type":"10. gcov"},{"name":"Invoking gcov","path":"invoking-gcov","type":"10. gcov"},{"name":"ISO/IEC 14882:1998 Edits for Thread-Local Storage","path":"c_002b_002b98-thread_002dlocal-edits","type":"6. Extensions to the C Language Family"},{"name":"ISO/IEC 9899:1999 Edits for Thread-Local Storage","path":"c99-thread_002dlocal-edits","type":"6. Extensions to the C Language Family"},{"name":"Java Exceptions","path":"java-exceptions","type":"7. Extensions to the C++ Language"},{"name":"Known Causes of Trouble with GCC","path":"trouble","type":"11. Known Causes of Trouble"},{"name":"Labels as Values","path":"labels-as-values","type":"6. Extensions to the C Language Family"},{"name":"Language Standards Supported by GCC","path":"standards","type":"2. Language Standards Supported by GCC"},{"name":"Legacy type encoding","path":"legacy-type-encoding","type":"8. GNU Objective-C features"},{"name":"Legacy __sync Built-in Functions for Atomic Memory Access","path":"_005f_005fsync-builtins","type":"6. Extensions to the C Language Family"},{"name":"Library functions","path":"library-functions-implementation","type":"4. C Implementation-defined behavior"},{"name":"LM32 Options","path":"lm32-options","type":"3. GCC Command Options"},{"name":"Locale-specific behavior","path":"locale_002dspecific-behavior-implementation","type":"4. C Implementation-defined behavior"},{"name":"Locally Declared Labels","path":"local-labels","type":"6. Extensions to the C Language Family"},{"name":"Loop-Specific Pragmas","path":"loop_002dspecific-pragmas","type":"6. Extensions to the C Language Family"},{"name":"M32C Options","path":"m32c-options","type":"3. GCC Command Options"},{"name":"M32C Pragmas","path":"m32c-pragmas","type":"6. Extensions to the C Language Family"},{"name":"M32R/D Options","path":"m32r_002fd-options","type":"3. GCC Command Options"},{"name":"M680x0 Options","path":"m680x0-options","type":"3. GCC Command Options"},{"name":"Macros with a Variable Number of Arguments.","path":"variadic-macros","type":"6. Extensions to the C Language Family"},{"name":"MCore Options","path":"mcore-options","type":"3. GCC Command Options"},{"name":"MeP Options","path":"mep-options","type":"3. GCC Command Options"},{"name":"MeP Pragmas","path":"mep-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Messaging with the GNU Objective-C runtime","path":"messaging-with-the-gnu-objective_002dc-runtime","type":"8. GNU Objective-C features"},{"name":"Method signatures","path":"method-signatures","type":"8. GNU Objective-C features"},{"name":"MicroBlaze Options","path":"microblaze-options","type":"3. GCC Command Options"},{"name":"MIPS DSP Built-in Functions","path":"mips-dsp-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"MIPS Loongson Built-in Functions","path":"mips-loongson-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"MIPS Options","path":"mips-options","type":"3. GCC Command Options"},{"name":"MIPS Paired-Single Support","path":"mips-paired_002dsingle-support","type":"6. Extensions to the C Language Family"},{"name":"MIPS-3D Built-in Functions","path":"mips_002d3d-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Mixed Declarations and Code","path":"mixed-declarations","type":"6. Extensions to the C Language Family"},{"name":"MMIX Options","path":"mmix-options","type":"3. GCC Command Options"},{"name":"MN10300 Options","path":"mn10300-options","type":"3. GCC Command Options"},{"name":"Modern GNU Objective-C runtime API","path":"modern-gnu-objective_002dc-runtime-api","type":"8. GNU Objective-C features"},{"name":"Moxie Options","path":"moxie-options","type":"3. GCC Command Options"},{"name":"MSP430 Built-in Functions","path":"msp430-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"MSP430 Options","path":"msp430-options","type":"3. GCC Command Options"},{"name":"Multiple Alternative Constraints","path":"multi_002dalternative","type":"6. Extensions to the C Language Family"},{"name":"Name lookup, templates, and accessing members of base classes","path":"name-lookup","type":"11. Known Causes of Trouble"},{"name":"Named Address Spaces","path":"named-address-spaces","type":"6. Extensions to the C Language Family"},{"name":"Namespace Association","path":"namespace-association","type":"7. Extensions to the C++ Language"},{"name":"NDS32 Built-in Functions","path":"nds32-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"NDS32 Options","path":"nds32-options","type":"3. GCC Command Options"},{"name":"Nested Functions","path":"nested-functions","type":"6. Extensions to the C Language Family"},{"name":"Nios II Options","path":"nios-ii-options","type":"3. GCC Command Options"},{"name":"Non-Constant Initializers","path":"initializers","type":"6. Extensions to the C Language Family"},{"name":"Non-Lvalue Arrays May Have Subscripts","path":"subscripting","type":"6. Extensions to the C Language Family"},{"name":"Object Size Checking Built-in Functions","path":"object-size-checking","type":"6. Extensions to the C Language Family"},{"name":"Offsetof","path":"offsetof","type":"6. Extensions to the C Language Family"},{"name":"Option Summary","path":"option-summary","type":"3. GCC Command Options"},{"name":"Options Controlling C Dialect","path":"c-dialect-options","type":"3. GCC Command Options"},{"name":"Options Controlling C++ Dialect","path":"c_002b_002b-dialect-options","type":"3. GCC Command Options"},{"name":"Options Controlling Objective-C and Objective-C++ Dialects","path":"objective_002dc-and-objective_002dc_002b_002b-dialect-options","type":"3. GCC Command Options"},{"name":"Options Controlling the Kind of Output","path":"overall-options","type":"3. GCC Command Options"},{"name":"Options Controlling the Preprocessor","path":"preprocessor-options","type":"3. GCC Command Options"},{"name":"Options for Code Generation Conventions","path":"code-gen-options","type":"3. GCC Command Options"},{"name":"Options for Debugging Your Program or GCC","path":"debugging-options","type":"3. GCC Command Options"},{"name":"Options for Directory Search","path":"directory-options","type":"3. GCC Command Options"},{"name":"Options for Linking","path":"link-options","type":"3. GCC Command Options"},{"name":"Options for System V","path":"system-v-options","type":"3. GCC Command Options"},{"name":"Options That Control Optimization","path":"optimize-options","type":"3. GCC Command Options"},{"name":"Options to Control Diagnostic Messages Formatting","path":"language-independent-options","type":"3. GCC Command Options"},{"name":"Options to Request or Suppress Warnings","path":"warning-options","type":"3. GCC Command Options"},{"name":"Other Built-in Functions","path":"other-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Other Built-in Functions Provided by GCC","path":"other-builtins","type":"6. Extensions to the C Language Family"},{"name":"Other MIPS Built-in Functions","path":"other-mips-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Paired-Single Arithmetic","path":"paired_002dsingle-arithmetic","type":"6. Extensions to the C Language Family"},{"name":"Paired-Single Built-in Functions","path":"paired_002dsingle-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Passing Options to the Assembler","path":"assembler-options","type":"3. GCC Command Options"},{"name":"PDP-11 Options","path":"pdp_002d11-options","type":"3. GCC Command Options"},{"name":"picoChip Built-in Functions","path":"picochip-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"picoChip Options","path":"picochip-options","type":"3. GCC Command Options"},{"name":"PowerPC AltiVec Built-in Functions","path":"powerpc-altivec_002fvsx-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"PowerPC Built-in Functions","path":"powerpc-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"PowerPC Hardware Transactional Memory Built-in Functions","path":"powerpc-hardware-transactional-memory-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"PowerPC Options","path":"powerpc-options","type":"3. GCC Command Options"},{"name":"Pragmas Accepted by GCC","path":"pragmas","type":"6. Extensions to the C Language Family"},{"name":"Preprocessing directives","path":"preprocessing-directives-implementation","type":"4. C Implementation-defined behavior"},{"name":"Prototypes and Old-Style Function Definitions","path":"function-prototypes","type":"6. Extensions to the C Language Family"},{"name":"Push/Pop Macro Pragmas","path":"push_002fpop-macro-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Qualifiers","path":"qualifiers-implementation","type":"4. C Implementation-defined behavior"},{"name":"Raw read/write Functions","path":"raw-read_002fwrite-functions","type":"6. Extensions to the C Language Family"},{"name":"Referring to a Type with typeof","path":"typeof","type":"6. Extensions to the C Language Family"},{"name":"Restricting Pointer Aliasing","path":"restricted-pointers","type":"7. Extensions to the C++ Language"},{"name":"RL78 Options","path":"rl78-options","type":"3. GCC Command Options"},{"name":"RS/6000 and PowerPC Pragmas","path":"rs_002f6000-and-powerpc-pragmas","type":"6. Extensions to the C Language Family"},{"name":"RX Built-in Functions","path":"rx-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"RX Options","path":"rx-options","type":"3. GCC Command Options"},{"name":"S/390 and zSeries Options","path":"s_002f390-and-zseries-options","type":"3. GCC Command Options"},{"name":"S/390 System z Built-in Functions","path":"s_002f390-system-z-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Score Options","path":"score-options","type":"3. GCC Command Options"},{"name":"SH Built-in Functions","path":"sh-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"SH Options","path":"sh-options","type":"3. GCC Command Options"},{"name":"Simple Constraints","path":"simple-constraints","type":"6. Extensions to the C Language Family"},{"name":"Slightly Looser Rules for Escaped Newlines","path":"escaped-newlines","type":"6. Extensions to the C Language Family"},{"name":"Solaris 2 Options","path":"solaris-2-options","type":"3. GCC Command Options"},{"name":"Solaris Format Checks","path":"solaris-format-checks","type":"6. Extensions to the C Language Family"},{"name":"Solaris Pragmas","path":"solaris-pragmas","type":"6. Extensions to the C Language Family"},{"name":"SPARC Options","path":"sparc-options","type":"3. GCC Command Options"},{"name":"SPARC VIS Built-in Functions","path":"sparc-vis-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"Specifying Attributes of Types","path":"type-attributes","type":"6. Extensions to the C Language Family"},{"name":"Specifying Attributes of Variables","path":"variable-attributes","type":"6. Extensions to the C Language Family"},{"name":"Specifying Registers for Local Variables","path":"local-reg-vars","type":"6. Extensions to the C Language Family"},{"name":"Specifying subprocesses and the switches to pass to them","path":"spec-files","type":"3. GCC Command Options"},{"name":"Specifying Target Machine and Compiler Version","path":"target-options","type":"3. GCC Command Options"},{"name":"SPU Built-in Functions","path":"spu-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"SPU Options","path":"spu-options","type":"3. GCC Command Options"},{"name":"Standard Libraries","path":"standard-libraries","type":"11. Known Causes of Trouble"},{"name":"Statements","path":"statements-implementation","type":"4. C Implementation-defined behavior"},{"name":"Statements and Declarations in Expressions","path":"statement-exprs","type":"6. Extensions to the C Language Family"},{"name":"Structure-Packing Pragmas","path":"structure_002dpacking-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Structures With No Members","path":"empty-structures","type":"6. Extensions to the C Language Family"},{"name":"Structures, unions, enumerations, and bit-fields","path":"structures-unions-enumerations-and-bit_002dfields-implementation","type":"4. C Implementation-defined behavior"},{"name":"Symbol-Renaming Pragmas","path":"symbol_002drenaming-pragmas","type":"6. Extensions to the C Language Family"},{"name":"Synchronization","path":"synchronization","type":"8. GNU Objective-C features"},{"name":"Temporaries May Vanish Before You Expect","path":"temporaries","type":"11. Known Causes of Trouble"},{"name":"The Character <ESC> in Constants","path":"character-escapes","type":"6. Extensions to the C Language Family"},{"name":"Thread-Local Storage","path":"thread_002dlocal","type":"6. Extensions to the C Language Family"},{"name":"TI C6X Built-in Functions","path":"ti-c6x-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"TILE-Gx Built-in Functions","path":"tile_002dgx-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"TILE-Gx Options","path":"tile_002dgx-options","type":"3. GCC Command Options"},{"name":"TILEPro Built-in Functions","path":"tilepro-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"TILEPro Options","path":"tilepro-options","type":"3. GCC Command Options"},{"name":"Traditional GNU Objective-C runtime API","path":"traditional-gnu-objective_002dc-runtime-api","type":"8. GNU Objective-C features"},{"name":"Translation","path":"translation-implementation","type":"4. C Implementation-defined behavior"},{"name":"Type encoding","path":"type-encoding","type":"8. GNU Objective-C features"},{"name":"Type Traits","path":"type-traits","type":"7. Extensions to the C++ Language"},{"name":"Unnamed struct/union fields within structs/unions","path":"unnamed-fields","type":"6. Extensions to the C Language Family"},{"name":"Using fast enumeration","path":"using-fast-enumeration","type":"8. GNU Objective-C features"},{"name":"Using gcov with GCC Optimization","path":"gcov-and-optimization","type":"10. gcov"},{"name":"Using Precompiled Headers","path":"precompiled-headers","type":"3. GCC Command Options"},{"name":"Using the GNU Compiler Collection (GCC)","path":"g_002b_002b-and-gcc","type":"1. Programming Languages Supported by GCC"},{"name":"Using Vector Instructions through Built-in Functions","path":"vector-extensions","type":"6. Extensions to the C Language Family"},{"name":"V850 Options","path":"v850-options","type":"3. GCC Command Options"},{"name":"Vague Linkage","path":"vague-linkage","type":"7. Extensions to the C++ Language"},{"name":"Variables in Specified Registers","path":"explicit-reg-vars","type":"6. Extensions to the C Language Family"},{"name":"VAX Options","path":"vax-options","type":"3. GCC Command Options"},{"name":"Visibility Pragmas","path":"visibility-pragmas","type":"6. Extensions to the C Language Family"},{"name":"VMS Options","path":"vms-options","type":"3. GCC Command Options"},{"name":"VxWorks Options","path":"vxworks-options","type":"3. GCC Command Options"},{"name":"Warning Messages and Error Messages","path":"warnings-and-errors","type":"11. Known Causes of Trouble"},{"name":"Weak Pragmas","path":"weak-pragmas","type":"6. Extensions to the C Language Family"},{"name":"What you can and what you cannot do in +load","path":"what-you-can-and-what-you-cannot-do-in-_002bload","type":"8. GNU Objective-C features"},{"name":"When is a Volatile C++ Object Accessed?","path":"c_002b_002b-volatiles","type":"7. Extensions to the C++ Language"},{"name":"When is a Volatile Object Accessed?","path":"volatiles","type":"6. Extensions to the C Language Family"},{"name":"Where's the Template?","path":"template-instantiation","type":"7. Extensions to the C++ Language"},{"name":"X86 Built-in Functions","path":"x86-built_002din-functions","type":"6. Extensions to the C Language Family"},{"name":"x86 specific memory model extensions for transactional memory","path":"x86-specific-memory-model-extensions-for-transactional-memory","type":"6. Extensions to the C Language Family"},{"name":"X86 transaction memory intrinsics","path":"x86-transactional-memory-intrinsics","type":"6. Extensions to the C Language Family"},{"name":"x86-64 Options","path":"x86_002d64-options","type":"3. GCC Command Options"},{"name":"Xstormy16 Options","path":"xstormy16-options","type":"3. GCC Command Options"},{"name":"Xtensa Options","path":"xtensa-options","type":"3. GCC Command Options"},{"name":"zSeries Options","path":"zseries-options","type":"3. GCC Command Options"}],"types":[{"name":"1. Programming Languages Supported by GCC","count":1,"slug":"1-programming-languages-supported-by-gcc"},{"name":"2. Language Standards Supported by GCC","count":1,"slug":"2-language-standards-supported-by-gcc"},{"name":"3. GCC Command Options","count":77,"slug":"3-gcc-command-options"},{"name":"4. C Implementation-defined behavior","count":17,"slug":"4-c-implementation-defined-behavior"},{"name":"5. C++ Implementation-defined behavior","count":3,"slug":"5-c-implementation-defined-behavior"},{"name":"6. Extensions to the C Language Family","count":125,"slug":"6-extensions-to-the-c-language-family"},{"name":"7. Extensions to the C++ Language","count":14,"slug":"7-extensions-to-the-c-language"},{"name":"8. GNU Objective-C features","count":23,"slug":"8-gnu-objective-c-features"},{"name":"9. Binary Compatibility","count":1,"slug":"9-binary-compatibility"},{"name":"10. gcov","count":6,"slug":"10-gcov"},{"name":"11. Known Causes of Trouble","count":14,"slug":"11-known-causes-of-trouble"}]}