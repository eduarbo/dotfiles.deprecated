# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set [-g])
# - Window options (setw [-g])

set -g default-command $SHELL

# Enable Italics
set -g default-terminal "xterm-256color"

# True Color
set -ga terminal-overrides ",xterm-256color:Tc"

# Zero-based indexing is fine in programming languages, but not so much in a multiplexer
# when zero is on the other side of the keyboard.
set -g base-index 1
set -g pane-base-index 1

set -g renumber-windows on  # renumber windows when a window is closed
setw -g automatic-rename on # rename window to reflect current program

# Shell only exists after the 10th consecutive Ctrl-d
# http://superuser.com/questions/479600/how-can-i-prevent-tmux-exiting-with-ctrl-d
setenv -g 'IGNOREEOF' 10

# Mouse
set -g mouse on


#
# Bindings
#

# ensure keyboard shortcuts inside vim still work
setw -g xterm-keys on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Relax!
set -sg repeat-time 1000

# Use something easier to type as the prefix
set -g prefix C-s
unbind C-b
bind C-s send-prefix

## Pane management
# Saner splitting
unbind %
unbind '"'
bind s split-window -c "#{pane_current_path}" -v
bind v split-window -c "#{pane_current_path}" -h
bind c new-window -c "#{pane_current_path}"

# break pane into a window
bind | select-layout even-horizontal
bind _ select-layout even-vertical
bind - break-pane
bind + join-pane
bind t break-pane -t :

bind x kill-pane
bind X kill-window
bind q confirm-before kill-session
bind Q confirm-before kill-server

bind d detach # detach client
bind D choose-client # choose a client to detach

bind C new-session
bind c new-window

bind S choose-session
bind w choose-window

bind R command-prompt 'rename-session %%'
bind r command-prompt "rename-window %%"

# Switch to
bind Tab last-window
bind BSpace last-pane

# display visible indicator of each pane
bind W display-panes

# Toggle to maximize or restore the current pane
bind m resize-pane -Z

# Swap current pane with the
bind -r L swap-pane -D # next one
bind -r H swap-pane -U # previous one

# reload config without killing server
bind enter source-file $HOME/.tmux.conf \; display-message "  Config reloaded..".
bind ^enter refresh-client

# clear both screen and history
unbind Space
bind Space send-keys c-l \; clear-history

# colon :
bind \; command-prompt


## Movement

bind -r [ switch-client -p
bind -r ] switch-client -n

bind C-p previous-window
bind C-n next-window
bind -n C-n next-window
bind -n C-p previous-window

bind -r < swap-window -t -1
bind -r > swap-window -t +1

bind -r o rotate-window
bind -r O rotate-window -D

# Cycle window layouts
bind -r i next-layout
bind -r I previous-layout

# Pane resizing
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5


## Copy mode

# Use vim keybindings in copy mode
setw -g mode-keys vi

bind , copy-mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# integration with clipboard and primary selection

# move x clipboard into tmux paste buffer
unbind C-p
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# move tmux copy buffer into x clipboard
unbind C-y
bind C-y run "tmux save-buffer - | xclip -i"

# fix mouse scrolling: enter copy mode on scroll-up, exits it when scrolled to bottom
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"


#
# Display
#

# Activity
setw -g monitor-activity on
set -g visual-activity off

# set terminal title
set -g set-titles on
set -g set-titles-string "tmux [#H] #S:#W:#T"
set -g display-panes-time 1000

# Custom status bar
set -g status-fg brightblack
set -g status-bg default
set -g status-attr dim
set -g status-position bottom

set -g pane-border-fg brightblack
set -g pane-active-border-fg blue

set -g status-left-length 32
set -g status-left-style fg=brightwhite,bold
set -g status-left '#{?window_zoomed_flag,  ,}#{pacmux_sessions} '

set -g status-right-style fg=white
set -g status-right '#{pacmux_overview}'

set -g window-status-separator ' '
set -g window-status-style fg=brightblack,bold,bg=black
set -g window-status-last-style default
set -g window-status-activity-style default
set -g window-status-bell-style default
set -g window-status-format '#{pacmux_window_flag} #I#[none,fg=brightblack]/#W'

set -g window-status-current-style fg=white,bold,bg=black
set -g window-status-current-format '#{pacmux_pacman} #I#[none,fg=white]/#W'

set -g message-fg brightyellow
set -g message-bg black

#window mode
setw -g mode-fg black
setw -g mode-bg brightgreen

if '[[ $OSTYPE == darwin* ]]' 'source $TMUX_HOME/tmux.macos.conf'


#
# Plugins
#

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'eduarbo/pacmux'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @resurrect-dir '~/.local/share/tmux/resurrect'

set -g @prefix_highlight_fg colour4
set -g @prefix_highlight_output_suffix ' #[bg=colour8] '

# Initializes TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '$TMUX_PLUGINS_HOME/tpm/tpm'
