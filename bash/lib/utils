#!/usr/bin/env bash
export DOT="$HOME/.dotfiles"

# Test whether a command exists
# $1 - cmd to test
type_exists() {
  command -v "$1" >/dev/null 2>&1
}

lazy_source () {
  eval "$1 () { [ -f $2 ] && source $2 && $1 \$@ }"
}

# source and evaluate a command if it is passed as second argument
source_file () {
  if [[ -s "$1" ]]; then
    source "$1"
  fi
}

source_and_eval () {
  if [[ -s "$1" ]]; then
    source "$1"
    test "$2" && type_exists "$2" && eval "$2"
  fi
}

# Header logging
e_header() {
  printf "\n$(tput setaf 5)%s$(tput sgr0)\n" "$@"
}

# Success logging
e_success() {
  printf "$(tput setaf 10)âœ“ %s$(tput sgr0)\n" "$@"
}

# Error logging
e_error() {
  printf "$(tput setaf 9)x %s$(tput sgr0)\n" "$@"
}

# Warning logging
e_warning() {
  printf "$(tput setaf 11)! %s$(tput sgr0)\n" "$@"
}

# Ask for confirmation before proceeding
seek_confirmation() {
  printf "\n"
  e_warning "$@"
  read -rp "Continue? (y/n) " -n 1
  printf "\n"
}

# Test whether the result of an 'ask' is a confirmation
is_confirmed() {
  [[ "$REPLY" =~ ^[Yy]$ ]] && return 0
  return 1
}

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
  test "$(brew list "$1" 2&>/dev/null)" && return 0
  return 1
}

if [[ -x "$(which brew)" ]]; then
  export HAS_BREW=1
  # BREW_LOCATION=`brew --prefix`
  export BREW_LOCATION="/usr/local"
fi

if [[ -n $ZSH_VERSION ]]; then
  export SHELL_NAME="zsh"
elif [[ -n $BASH_VERSION ]]; then
  export SHELL_NAME="bash"
fi

case "$OSTYPE" in
  darwin*)  export IS_MACOS=1 ;;
  linux*)   export IS_LINUX=1 ;;
esac

function _stop_startup_timer {
  [[ -n "$DISABLE_LOAD_TIME" ]] && return 1
  local end
  # Stop shell startup timer
  end=$(/usr/local/bin/gdate +%s%N 2> /dev/null || date +%s%N)
  local total=$(((end - LOAD_TIME_START) / 1000000))

  printf "Load time: %0.2fs\n" "$(bc <<< scale=2\;$total/1000)"
}
