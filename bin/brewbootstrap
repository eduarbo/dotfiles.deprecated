#!/usr/bin/env bash
DOTFILES_DIRECTORY="${HOME}/.dotfiles"
source "${DOTFILES_DIRECTORY}/lib/utils"

if [[ "$1" == "-h" || "$1" == "--help" ]]; then

cat <<EOT
Usage: $(basename "$0") [options]

Options:
-h, --help      Print this help text
--minimal       Install only essential packages
--only-git      Only git is installed
--no-update     Skip brew update

Copyright (c) Eduardo Ruiz
Licensed under the MIT license.
EOT

  exit
fi

# Test for known flags
for opt in $@
do
  case $opt in
    --minimal) _minimal=true ;;
    --only-git) _only_git=true ;;
    --no-update) _no_update=true ;;
    -*|--*) e_warning "Warning: invalid option $opt" ;;
  esac
done

# Check for Homebrew
if [[ ! -x `which brew` ]]; then
  e_error "Error: Homebrew not found."
  echo "Installing Homebrew..."
  ruby -e "$(curl -fsSL raw.githubusercontent.com/Homebrew/install/master/install)"
  _no_update=true
fi

# Check for git
if [[ ${_only_git} ]]; then
  if ! type_exists 'git'; then
    if [[ ! ${_no_update} ]]; then
      e_header "Updating Homebrew..."
      brew update
      [[ $? ]] && e_success "Done"
    fi
    e_header "Installing Git..."
    brew install git
    [[ $? ]] && e_success "Done"
  else
    e_header "Git is already installed"
  fi

  exit 1
fi

if [[ -x `which brew` ]]; then
  if [[ ! ${_no_update} ]]; then
    e_header "Updating Homebrew..."
    # Use the latest version of Homebrew
    brew update
    [[ $? ]] && e_success "Done"

    e_header "Updating any existing Homebrew formulae..."
    # Upgrade any already-installed formulae
    brew upgrade
    [[ $? ]] && e_success "Done"
  fi

  brew tap homebrew/dupes

  e_header "Checking status of desired Homebrew formulae..."

  base_formulae=(
  'coreutils' # GNU core utilities (those that come with OS X are outdated)
  'git'
  'bash'
  'bash-completion'
  'zsh'
  'zsh-completions'
  'zsh-syntax-highlighting'
  'zsh-history-substring-search'
  )

  extra_formulae=(
  'gnutls --default-names' #required by Taskwarrior
  'rsync --default-names'
  'nvm'
  'selecta'
  'fasd'
  'ctags'
  'ack'
  'mercurial'
  'openssl'
  'the_silver_searcher'
  'brew-cask'
  'go'
  'python --framework'
  'macvim --with-cscope --with-lua --env-std --override-system-vim'
  'ruby-install chruby'
  'libsass sassc'
  'tmux'
  'reattach-to-user-namespace' # tmux Copy & Paste
  'task'
  'shellcheck checkbashisms'
  'vit'
  'tig'
  'fortune'
  'cowsay'
  '--HEAD fzf'
  'gtypist'
  # 'emacs --HEAD --use-git-head --cocoa --srgb'
  )

  for index in ${!base_formulae[*]}; do
    if ! formula_exists ${base_formulae[$index]}; then
      # Store the name (and options) of every missing formula
      missing_formulae=("${missing_formulae[@]}" "${base_formulae[$index]}")
    fi
  done

  # Conditionally add extra formulas
  if [[ ! ${_minimal} ]]; then
    for index in ${!extra_formulae[*]}; do
      if ! formula_exists ${extra_formulae[$index]}; then
        # Store the name (and options) of every missing formula
        missing_formulae=("${missing_formulae[@]}" "${extra_formulae[$index]}")
      fi
    done
  fi

  if [[ "$missing_formulae" ]]; then
    # Convert the array of missing formula into a list of space-separate strings
    list_formulae=$( printf "%s " "${missing_formulae[@]}" )

    e_header "Installing missing Homebrew formulae..."
    # Install all missing formulae
    brew install $list_formulae

    [[ $? ]] && e_success "Done"
  fi

  # Remove outdated versions from the Cellar
  brew cleanup
  unset missing_formulae list_formulae base_formulae
fi
