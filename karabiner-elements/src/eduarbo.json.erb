{
    "title": "Personal rules (@eduarbo)",
    "rules": [
        {
            "description": "Moving Around",
            "manipulators": [
                {
                    "type": "basic",
                    "from": <%= from("h", ["right_option"], ["any"]) %>,
                    "to": <%= to([["left_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("j", ["right_option"], ["any"]) %>,
                    "to": <%= to([["down_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("k", ["right_option"], ["any"]) %>,
                    "to": <%= to([["up_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("l", ["right_option"], ["any"]) %>,
                    "to": <%= to([["right_arrow"]]) %>
                }
            ]
        },
        {
            "description": "Thumb cluster",
            "manipulators": [
                {
                    "description": "Change spacebar to right_command. (Post return if pressed alone)",
                    "type": "basic",
                    "from": <%= from("spacebar", [], ["any"]) %>,
                    "to": <%= to([["right_command"]]) %>,
                    "to_if_alone": <%= to([["return_or_enter"]]) %>
                },
                {
                    "description": "Change right_command to right_shift. (Post spacebar if pressed alone)",
                    "type": "basic",
                    "from": <%= from("right_command", [], ["any"]) %>,
                    "to": <%= to([["right_shift"]]) %>,
                    "to_if_alone": <%= to([["escape"]]) %>
                },
                {
                    "description": "Change left_command to left_shift. (Post tab if pressed alone)",
                    "type": "basic",
                    "from": <%= from("left_command", [], ["any"]) %>,
                    "to": <%= to([["left_shift"]]) %>,
                    "to_if_alone": <%= to([["spacebar"]]) %>
                },
                {
                    "description": "Change right_option to right_option. (Post open parenthesis if pressed alone)",
                    "type": "basic",
                    "from": <%= from("right_option", [], ["any"]) %>,
                    "to": <%= to([["right_option"]]) %>,
                    "to_if_alone": <%= to([["0", ["left_shift"]]]) %>
                },
                {
                    "description": "Change left_option to right_control. (Post close parenthesis if pressed alone)",
                    "type": "basic",
                    "from": <%= from("left_option", [], ["any"]) %>,
                    "to": <%= to([["right_control"]]) %>,
                    "to_if_alone": <%= to([["9", ["left_shift"]]]) %>
                },
                {
                    "description": "Change left_control to fn",
                    "type": "basic",
                    "from": <%= from("left_control", [], ["any"]) %>,
                    "to": <%= to([["fn"]]) %>
                }
            ]
        },
        {
            "description": "Emacs key bindings",
            "manipulators": [
                {
                    "description": "Change control+u to delete-to-beginning-of-line",
                    "type": "basic",
                    "from": <%= from("u", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["a", ["left_control", "right_shift"]], ["delete_or_backspace"], ["vk_none"]]) %>,
                    "conditions": [ <%= frontmost_application_unless("emacs_key_bindings_exception") %> ]
                },
                {
                    "description": "Change control+w to option+delete",
                    "type": "basic",
                    "from": <%= from("w", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["delete_or_backspace", ["left_option"]]]) %>,
                    "conditions": [ <%= frontmost_application_unless("emacs_key_bindings_exception") %> ]
                },
                {
                    "type": "basic",
                    "from": <%= from("d", ["control"], ["caps_lock"]) %>,
                    "to": <%= to([["delete_forward"]]) %>,
                    "conditions": [ <%= frontmost_application_unless("emacs_key_bindings_exception") %> ]
                },
                {
                    "type": "basic",
                    "from": <%= from("b", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to([["left_arrow", ["left_option"]]]) %>,
                    "conditions": [ <%= frontmost_application_unless("emacs_key_bindings_exception") %> ]
                },
                {
                    "type": "basic",
                    "from": <%= from("f", ["control"], ["caps_lock", "shift"]) %>,
                    "to": <%= to([["right_arrow", ["left_option"]]]) %>,
                    "conditions": [ <%= frontmost_application_unless("emacs_key_bindings_exception") %> ]
                }
            ]
        },
        {
            <%
                symbols_modifier = "left_shift";
                numbers_row = "1234567890".split("");
            %>
            "description": "Symbols Layer",
            "manipulators": [
                <% "qwertyuiop".split("").each_with_index do |char, index| %>
                {
                    "type": "basic",
                    "from": <%= from(char, [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([[numbers_row[index]]]) %>
                },
                <% end %>

                <% "asdfghjk".split("").each_with_index do |char, index| %>
                {
                    "type": "basic",
                    "from": <%= from(char, [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([[numbers_row[index], ["right_shift"]]]) %>
                },
                <% end %>
                {
                    "type": "basic",
                    "from": <%= from("l", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["backslash"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("semicolon", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["backslash", ["right_shift"]]]) %>
                },

                {
                    "type": "basic",
                    "from": <%= from("z", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["1", ["left_option"]]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("x", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["equal_sign"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("c", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["hyphen"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("v", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["equal_sign", ["right_shift"]]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("b", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["hyphen", ["right_shift"]]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("n", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["n", ["left_option"]]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("m", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["e", ["left_option"]]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("slash", [symbols_modifier], ["caps_lock"]) %>,
                    "to": <%= to([["slash", ["right_shift", "left_option"]]]) %>
                }
            ]
        },
        {
            "description": "Fn Layer",
            "manipulators": [
                <%# -------------------------------------------------- %>
                <%# Volume controls %>
                <%# -------------------------------------------------- %>
                {
                    "type": "basic",
                    "from": <%= from("open_bracket", ["fn"], []) %>,
                    "to": <%= to([["volume_decrement"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("close_bracket", ["fn"], []) %>,
                    "to": <%= to([["volume_increment"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("delete_or_backspace", ["fn"], []) %>,
                    "to": <%= to([["mute"]]) %>
                },

                <%# -------------------------------------------------- %>
                <%# Brightness controls %>
                <%# -------------------------------------------------- %>
                {
                    "type": "basic",
                    "from": <%= from("w", ["fn"], []) %>,
                    "to": <%= to([["display_brightness_decrement"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("r", ["fn"], []) %>,
                    "to": <%= to([["display_brightness_increment"]]) %>
                },

                <%# -------------------------------------------------- %>
                <%# Movement %>
                <%# -------------------------------------------------- %>
                {
                    "type": "basic",
                    "from": <%= from("a", ["fn"], []) %>,
                    "to": <%= to([["home"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("g", ["fn"], []) %>,
                    "to": <%= to([["end"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("e", ["fn"], []) %>,
                    "to": <%= to([["up_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("s", ["fn"], []) %>,
                    "to": <%= to([["left_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("d", ["fn"], []) %>,
                    "to": <%= to([["down_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("f", ["fn"], []) %>,
                    "to": <%= to([["right_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("h", ["fn"], []) %>,
                    "to": <%= to([["left_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("j", ["fn"], []) %>,
                    "to": <%= to([["down_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("k", ["fn"], []) %>,
                    "to": <%= to([["up_arrow"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("l", ["fn"], []) %>,
                    "to": <%= to([["right_arrow"]]) %>
                },

                <%# -------------------------------------------------- %>
                <%# Function keys %>
                <%# -------------------------------------------------- %>
                <%
                    remap_function_keys = [
                        'y', 'u', 'i', 'o', 'p',
                        'n', 'm', 'comma', 'period', 'slash',
                        'grave_accent_and_tilde', 'quote'
                    ];
                %>

                <% remap_function_keys.each.with_index(1) do |char, index| %>
                {
                    "type": "basic",
                    "from": <%= from(char, ["fn"], []) %>,
                    "to": <%= to([["f#{index}", ["fn"]]]) %>
                },
                <% end %>

                <%# -------------------------------------------------- %>
                <%# Music %>
                <%# -------------------------------------------------- %>
                {
                    "type": "basic",
                    "from": <%= from("x", ["fn"], []) %>,
                    "to": <%= to([["rewind"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("c", ["fn"], []) %>,
                    "to": <%= to([["play_or_pause"]]) %>
                },
                {
                    "type": "basic",
                    "from": <%= from("v", ["fn"], []) %>,
                    "to": <%= to([["fastforward"]]) %>
                }
            ]
        },
        {
            <%
                appsMap = {
                    "a" => "/Applications/Calendar.app",
                    "b" => "/Applications/Karabiner-Elements.app",
                    "c" => "/Applications/HipChat.app",
                    "e" => "/usr/local/Cellar/emacs/25.2/Emacs.app",
                    "f" => "/System/Library/CoreServices/Finder.app",
                    "g" => "/Applications/Google Chrome.app",
                    "i" => "/Applications/iTerm.app",
                    "m" => "/Applications/Mail.app",
                    "o" => "/Applications/Opera.app",
                    "p" => "/Applications/Spotify.app",
                    "r" => "/Applications/Utilities/Activity Monitor.app",
                    "s" => "/Applications/Slack.app",
                    "w" => "/Applications/1Password 6.app",
                    "grave_accent_and_tilde" => "/System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app"
                }
            %>

            "description": "Launch apps by right option+letters.",
            "manipulators": [
                <% appsMap.each do |key, appPath| %>
                {
                    "type": "basic",
                    "from": <%= from(key, ["right_option"], ["caps_lock"]) %>,
                    "to": [{ "shell_command": "open '<%= appPath %>'" }]
                },
                <% end %>
                { "type": "basic" }
            ]
        }
    ]
}
